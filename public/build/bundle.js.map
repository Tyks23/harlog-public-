{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/routes/Homepage.svelte","../../src/routes/Userpanel.svelte","../../src/routes/StartSession.svelte","../../src/routes/ResultsSession.svelte","../../src/routes/RegisterPage.svelte","../../src/routes/ActiveSession.svelte","../../src/routes/QuestionPage.svelte","../../src/routes/ResultsGroup.svelte","../../src/routes/ResultsActivity.svelte","../../src/routes/ResultsParticipant.svelte","../../src/routes/ComparisonGroup.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n<script>\r\n//test    123\r\nimport {push} from \"svelte-spa-router\";\r\nlet roomExists = false;\r\nlet user = {\r\n    name: \"\",\r\n    password: \"\"\r\n};\r\nlet quizParticipant = {\r\n\r\n};\r\n\r\nlet activity = {\r\n\r\n};\r\n\r\nlet roomKey = {\r\n    roomkey : \"\"\r\n};\r\nasync function login(){\r\n    let haveErrors = false;\r\n    if(user.name === \"\"){\r\n        document.getElementById('error-user').innerHTML = \"Sisesta kasutajatunnus!\"\r\n        haveErrors= true;\r\n\r\n    }\r\n    else{\r\n        document.getElementById('error-user').innerHTML = \"\"\r\n    }\r\n    if (user.password === \"\"){\r\n        document.getElementById('error-password').innerHTML = \"Sisesta parool!\"\r\n        haveErrors= true;\r\n    }\r\n    else{\r\n        document.getElementById('error-password').innerHTML = \"\"\r\n\r\n    }\r\n    if(haveErrors === false){\r\n        const response = await fetch(\"http://localhost:3000/login\", {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(user) // body data type must match \"Content-Type\" header\r\n            });\r\n            if(response.ok){\r\n                let token = await response.json();\r\n                sessionStorage.setItem(\"token\", `Bearer ${token.token}`);\r\n                push(\"/userpanel\");\r\n            }\r\n            if(response.status === 403){\r\n                document.getElementById('error-login').innerHTML = \"Vigane kasutajatunnus või parool!\"\r\n            }\r\n            \r\n    }\r\n    haveErrors = false;            \r\n}\r\n\r\nasync function enterQuiz(){\r\n    let haveErrorsQuiz = false;\r\n    \r\n\r\n    if(typeof quizParticipant.part_name === 'undefined'){\r\n        document.getElementById('error-part_name').innerHTML = \"Sisesta nimi!\"\r\n        haveErrorsQuiz= true;\r\n\r\n    }\r\n    else{\r\n        document.getElementById('error-part_name').innerHTML = \"\"\r\n    }\r\n    if(typeof quizParticipant.part_email === 'undefined'){\r\n        document.getElementById('error-part_email').innerHTML = \"Sisesta email!\"\r\n        haveErrorsQuiz= true;\r\n    }\r\n    else{\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (re.test(quizParticipant.part_email) === false){\r\n            haveErrorsQuiz = true;\r\n            document.getElementById('error-part_email').innerHTML = \"Pole korrektne meiliaadress!\"\r\n        }\r\n        else{\r\n            document.getElementById('error-part_email').innerHTML = \"\" \r\n        }  \r\n    }\r\n    \r\n    if(haveErrorsQuiz === false){\r\n        const response = await fetch(\"http://localhost:3000/enterquiz\", {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(quizParticipant) // body data type must match \"Content-Type\" header\r\n            \r\n            });\r\n            \r\n            if(response.ok){\r\n                let token = await response.json();\r\n                sessionStorage.setItem(\"token\", `Bearer ${token.token}`);\r\n                push(\"/questionpage\");\r\n            }\r\n    }\r\n    haveErrorsQuiz = false;\r\n}\r\nasync function getRoomkey(){\r\n    \r\n    let haveErrorsRoom = false;\r\n    if(roomKey.roomkey === \"\"|| roomKey.roomkey=== \"undefined\"){\r\n        document.getElementById('error-room').innerHTML = \"Sisesta ruumi võti!\"\r\n        haveErrorsRoom= true;\r\n    }\r\n    else{\r\n        document.getElementById('error-room').innerHTML = \"\"\r\n    }   \r\n    if(haveErrorsRoom === false){\r\n        const response = await fetch(\"http://localhost:3000/getroomkey\", {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(roomKey) // body data type must match \"Content-Type\" header\r\n            });\r\n            if(response.ok){\r\n                roomExists = true;\r\n                quizParticipant.activity_id = (await response.json()).activity_id;\r\n            }\r\n            if(response.status === 404){\r\n                document.getElementById('error-room').innerHTML = \"Vale ruumi võti!\"\r\n                roomExists = false;\r\n            }\r\n    }\r\n    haveErrorsRoom = false;            \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n<table class=\"wrapper\">\r\n<div class=\"container\">\r\n    <div class=\"padding\">\r\n    <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\" onclick=\"window.location.href='http://localhost:5000'\">   \r\n{#if !roomExists}\r\n    \r\n    \r\n    <div>\r\n        <h2 class=\"title\">Õpilane:</h2>\r\n        <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Sisesta ruumivõti:</p>\r\n        <form class=\"container\">\r\n        <input type=\"text\" placeholder=\"Võti\" bind:value=\"{roomKey.roomkey}\"><span class=\"errormsg\" id=\"error-room\"></span>\r\n        <button on:click|preventDefault={getRoomkey}>SISESTA</button>\r\n        </form>\r\n    </div>\r\n    <div>\r\n        <h2 class=\"title\">Õpetaja:</h2>\r\n        <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Logi sisse:</p>\r\n        <form class=\"container\">\r\n        <input type=\"text\" placeholder=\"Kasutajatunnus\" bind:value=\"{user.name}\"><span class=\"errormsg\" id=\"error-user\"></span>\r\n        <input type=\"password\" placeholder=\"Parool\" bind:value=\"{user.password}\"><span class=\"errormsg\" id=\"error-password\"></span><span class=\"errormsg\" id=\"error-login\"></span>\r\n        <input type=\"submit\" value=\"SISENE\" on:click|preventDefault=\"{login}\">   \r\n        </form>\r\n    </div>\r\n    <input type=\"button\" value=\"REGISTREERU\" on:click|preventDefault=\"{() => {push('/registerpage')}}\">\r\n{:else}\r\n<div>\r\n    \r\n    <h2 class=\"title\">Sessioonis osalemine</h2>\r\n    <form class=\"container\">\r\n    <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Sisesta nimi</p>\r\n    <input type=\"text\" placeholder=\"Nimi\" bind:value=\"{quizParticipant.part_name}\"><span class=\"errormsg\" id=\"error-part_name\"></span>\r\n    <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Sisesta email</p>\r\n    <input type=\"text\" placeholder=\"Email\" bind:value=\"{quizParticipant.part_email}\"><span class=\"errormsg\" id=\"error-part_email\"></span>\r\n    <input type=\"submit\" value=\"SISENE\" on:click|preventDefault=\"{enterQuiz}\">\r\n    <button on:click|preventDefault=\"{() => {roomExists=false}}\">Pealehele</button>  \r\n    </form>\r\n\r\n</div>\r\n{/if}\r\n    </div>\r\n</div>\r\n</table>\r\n<style>\r\n\r\n\r\n\r\n</style>","\r\n\r\n<script>\r\n    import {push} from \"svelte-spa-router\";\r\n    \r\n    if(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n           // Redirect to login page\r\n           push(\"/\");\r\n       }\r\n    function logout(){\r\n        sessionStorage.removeItem(\"token\");\r\n        push(\"/\");\r\n    }\r\n    </script>\r\n    <div class=\"container\">\r\n        <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n        <h2 class=\"title\">Sessiooni haldamine</h2>\r\n        \r\n        <button on:click|preventDefault=\"{() => {push('/startsession')}}\">LOO UUS SESSIOON</button>\r\n        <button on:click|preventDefault=\"{() => {push('/resultssession')}}\">TULEMUSED</button>\r\n        <button on:click|preventDefault=\"{() => {push('/comparisongroup')}}\">VÕRDLUS</button>\r\n        <button on:click|preventDefault=\"{logout}\">Logi välja</button>\r\n    </div>\r\n    \r\n    \r\n    <style>\r\n\r\n        \r\n    </style>","\r\n    \r\n\r\n<script async> \r\n    \r\n    if(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n           // Redirect to login page\r\n           push(\"/\");\r\n       }\r\n    import {push, replace} from \"svelte-spa-router\";\r\n    \r\n\r\n    let group = {\r\n        group_name : undefined\r\n    }\r\n    let activity= {\r\n        incognito : false\r\n    }\r\n\r\n   \r\n    function logout(){\r\n        sessionStorage.removeItem(\"token\");\r\n        push(\"/\");\r\n    }\r\n    \r\n    async function createGroup(){\r\n        let haveErrors2 = false;\r\n        if(typeof group.group_name === 'undefined'){\r\n            document.getElementById('error-creategroup').innerHTML = \"Sisesta grupp!\"\r\n            haveErrors2= true;\r\n        }\r\n        else{\r\n            document.getElementById('error-creategroup').innerHTML = \"\"\r\n        }\r\n        if(haveErrors2 === false){\r\n            const response = await fetch(\"http://localhost:3000/creategroup\", {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : sessionStorage.getItem('token')\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(group) // body data type must match \"Content-Type\" header\r\n            });\r\n            if(response.ok){\r\n                let data = await response.json();\r\n                let groupList = document.getElementsByClassName('groupList')[0];\r\n                let appendable = document.createElement('li'); \r\n                let button = document.createElement('button');\r\n                button.value = data.group_id;\r\n                button.textContent = data.group_name;\r\n                button.onclick = () => {createActivity(data.group_id)};    \r\n                appendable.appendChild(button);\r\n                groupList.appendChild(appendable);\r\n                    //push(\"/\");\r\n            }\r\n        }\r\n        haveErrors2 = false;    \r\n    }\r\n    \r\n    async function createActivity(group_id){\r\n    \r\n        \r\n        let haveErrors = false;\r\n        if(typeof activity.activity_name === 'undefined'|| activity.activity_name === \"\"){\r\n            document.getElementById('error-activity').innerHTML = \"Sisesta tegevus!\"\r\n            haveErrors= true;\r\n        }\r\n        else{\r\n            document.getElementById('error-activity').innerHTML = \"\"\r\n        }\r\n        if(typeof activity.roomkey === 'undefined' || activity.roomkey === \"\" ){\r\n            document.getElementById('error-key').innerHTML = \"Sisesta toa võti!\"\r\n            haveErrors= true;\r\n        }\r\n      \r\n        if(haveErrors === false){\r\n            \r\n            activity.group_id = group_id;\r\n            const response = await fetch(\"http://localhost:3000/createactivity\", {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : sessionStorage.getItem('token')\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(activity) // body data type must match \"Content-Type\" header\r\n            });\r\n            if(response.status === 403){\r\n                document.getElementById('error-key').innerHTML = \"Toavõti kasutusel\"\r\n            }\r\n            if(response.ok){\r\n                \r\n                sessionStorage.setItem('roomkey', activity.roomkey);\r\n                push(\"/activesession\");\r\n            }\r\n        }   \r\n        \r\n        haveErrors =  false;  \r\n    }\r\n\r\n    async function listGroup(){\r\n        const response = await fetch(\"http://localhost:3000/listgroup\", {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization' : sessionStorage.getItem('token')\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n        });\r\n        \r\n       \r\n        if(response.ok){\r\n            return await response.json();\r\n            //push(\"/\");\r\n        }\r\n    }\r\n    </script>\r\n    <div class=\"container\">\r\n        <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n        <form class = \"container\">\r\n            <h2 class=\"title\">Alusta sessiooni:</h2>\r\n            <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Tunni tegevus:</p>\r\n            <input type=\"text\" placeholder=\"Tegevuse nimi\" bind:value=\"{activity.activity_name}\"><span class=\"errormsg\" id=\"error-activity\"></span>\r\n            <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Ruumi võti:</p>\r\n            <input type=\"text\" placeholder=\"Võti\" bind:value=\"{activity.roomkey}\"><span class=\"errormsg\" id=\"error-key\"></span>\r\n            <!--<div style=\"padding-left: 10px; padding-right: 10px; text-align: left; margin-top: 5px; margin-bottom: 5px;\" class=\"switchspan\">\r\n                <label class=\"switch\">\r\n                    \r\n                    <input type=\"checkbox\"on:click=\"{() => {activity.incognito = !activity.incognito}}\">\r\n                    <span class=\"slider round\"></span>\r\n                </label>\r\n                <span>Anonüümne sessioon &nbsp </span>\r\n            \r\n            </div> --->\r\n        </form>\r\n        <form class= \"container\">\r\n            <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Vali grupp, millega tegevust alustada:</p>\r\n            <div class=\"table\"> \r\n                <ul class = \"groupList\">\r\n                    {#await listGroup()}\r\n                    <p>Loading groups...</p>\r\n                    {:then groups}\r\n                    {#each groups as group}\r\n                \r\n                    <button on:click|preventDefault=\"{() => {createActivity(group.group_id)}}\">{group.group_name}</button>\r\n                    {/each}\r\n                    {/await}                \r\n                </ul>\r\n            </div>  \r\n            <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Uue grupi loomine:</p>  \r\n            <input type=\"text\" bind:value=\"{group.group_name}\"><span class=\"errormsg\" id=\"error-creategroup\"></span> \r\n            <button on:click|preventDefault=\"{createGroup}\">Loo grupp</button>\r\n            <hr />\r\n            <button on:click|preventDefault=\"{() => {push('/userpanel')}}\">Tagasi</button> \r\n            <button on:click|preventDefault=\"{logout}\">Logi välja</button>\r\n            \r\n            \r\n        </form>\r\n    </div>\r\n    \r\n    \r\n    <style>\r\n    /*.container {  \r\n        display: flex;\r\n        flex-direction: column;\r\n        \r\n    }*/\r\n    ul {\r\n       display: flex;\r\n       margin: auto;\r\n       \r\n        flex-direction: column;\r\n        list-style-type: none;\r\n        padding-left: 0%;\r\n        /*width: 90%; \r\n        list-style-type:none;\r\n        margin:auto;\r\n        padding:0;\r\n        position:relative;\r\n        left:5%;\r\n        width: 100%;\r\n        list-style: none;*/\r\n    }\r\n    /* The switch - the box around the slider */\r\n/*.switch {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 25px;\r\n  vertical-align: text-bottom;\r\n\r\n}\r\n\r\n/* Hide default HTML checkbox */\r\n/*.switch input {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n\r\n/* The slider */\r\n/*.slider {\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #BCABAE;\r\n  -webkit-transition: .4s;\r\n  transition: .4s;\r\n}\r\n\r\n.slider:before {\r\n  position: absolute;\r\n  content: \"\";\r\n  height: 19px;\r\n  width: 19px;\r\n  left: 3px;\r\n  bottom: 3px;\r\n  background-color: #FBFBFB;\r\n  -webkit-transition: .4s;\r\n  transition: .4s;\r\n}\r\n\r\ninput:checked + .slider {\r\n  background-color: #60495A;\r\n}\r\n\r\ninput:focus + .slider {\r\n  box-shadow: 0 0 3px #60495A;\r\n}\r\n\r\ninput:checked + .slider:before {\r\n  -webkit-transform: translateX(15px);\r\n  -ms-transform: translateX(15px);\r\n  transform: translateX(15px);\r\n}\r\n\r\n/* Rounded sliders */\r\n/*.slider.round {\r\n  border-radius: 25px;\r\n  \r\n}\r\n\r\n.slider.round:before {\r\n  border-radius: 50%;\r\n  \r\n}\r\n.switchspan{\r\n    display:inline;\r\n    \r\n}*/   \r\nhr {\r\n    width: 360px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}            \r\n    </style>","<script>\r\nimport { push } from \"svelte-spa-router\";\r\nif(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n    // Redirect to login page\r\n    push(\"/\");\r\n}\r\nfunction logout(){\r\n    sessionStorage.removeItem(\"token\");\r\n    push(\"/\");\r\n}\r\n\r\n\r\nlet selectedGroup = {\r\n    group_id : sessionStorage.getItem('group_id')\r\n};\r\nasync function listGroup(){\r\n        const response = await fetch(\"http://localhost:3000/listgroup\", {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization' : sessionStorage.getItem('token')\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n        });  \r\n        if(response.ok){\r\n            return await response.json();\r\n            //push(\"/\");\r\n        }\r\n    };\r\nasync function getActivities(){\r\n    \r\n}; \r\n</script>\r\n<div class=\"container\">\r\n    \r\n    <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n    <form class=\"container\">\r\n    <h2 class=\"title\">Tulemuste esitamine:</h2>        \r\n    \r\n    <p style=\"padding-left: 10px; padding-right: 10px; text-align: center;\">Vali grupp mille tulemusi soovid näha:</p>\r\n    </form>\r\n        <form>\r\n            \r\n            <ul class = \"groupList\">\r\n                {#await listGroup()}\r\n                <p>Loading groups...</p>\r\n                {:then groups}\r\n                {#each groups as group}\r\n                <button on:click=\"{() => {sessionStorage.setItem('group_id', group.group_id), sessionStorage.setItem('group_name', group.group_name); push('/resultsgroup')}}\">{group.group_name}</button> \r\n                              \r\n                {/each}\r\n                {/await}                \r\n            </ul>             \r\n        </form>\r\n        <hr />\r\n        <button on:click|preventDefault=\"{() => {push('/userpanel')}}\">Tagasi</button>\r\n        <button on:click|preventDefault=\"{logout}\">Logi välja</button>\r\n    </div>\r\n\r\n\r\n<style>\r\nul {\r\n       display: flex;\r\n       margin: auto;\r\n       \r\n        flex-direction: column;\r\n        list-style-type: none;\r\n        padding-left: 0%;\r\n        /*width: 90%; \r\n        list-style-type:none;\r\n        margin:auto;\r\n        padding:0;\r\n        position:relative;\r\n        left:5%;\r\n        width: 100%;\r\n        list-style: none;*/\r\n    }\r\n    hr {\r\n        width: 360px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }    \r\n</style>","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n<script>\r\n    import {push} from \"svelte-spa-router\";\r\n    let user = {\r\n     \r\n    }\r\n    let passwordVal;\r\n\r\n    async function register(){\r\n        let haveErrors = false;\r\n        if(typeof user.name === 'undefined' || user.name.length <5 || user.name.length > 15){\r\n            haveErrors = true;\r\n            document.getElementById('error-username').innerHTML = \" Palun sisestage kasutajanimi(5-15 tähemärki)!\" \r\n            //alert('Palun sisestage kasutajanimi(5-15 tähemärki)!') \r\n        }\r\n        else{\r\n            document.getElementById('error-username').innerHTML = \"\"; \r\n        }\r\n        if(typeof user.password === 'undefined'|| user.password === \"\"){\r\n            haveErrors = true;\r\n            document.getElementById('error-password').innerHTML = \" Palun sisestage parool!\"\r\n        }\r\n        else{\r\n            document.getElementById('error-password').innerHTML = \"\" \r\n        }\r\n        if(typeof user.password !== 'undefined' && user.password.length < 7){\r\n            haveErrors = true;\r\n            document.getElementById('error-password2').innerHTML = \" Parool peab olema vähemalt 7 tähemärki pikk!\"\r\n        }\r\n        else{\r\n            document.getElementById('error-password2').innerHTML = \"\" \r\n        }\r\n        if(user.password !== passwordVal){\r\n            haveErrors = true;\r\n            document.getElementById('error-passwordval').innerHTML = \" Sisestatud paroolid ei klapi!\"\r\n        }\r\n        else{\r\n            document.getElementById('error-passwordval').innerHTML = \"\"\r\n        }\r\n        if(typeof user.email === 'undefined' || user.email === \"\"){\r\n            haveErrors = true;\r\n            document.getElementById('error-email').innerHTML = \" Palun sisestage meiliaadress!\"\r\n        }\r\n        else{\r\n            \r\n        \r\n            const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n             \r\n            if (re.test(user.email) === false){\r\n                haveErrors = true;\r\n                document.getElementById('error-email').innerHTML = \" Pole korrektne meiliaadress!\"\r\n            }\r\n            else{\r\n                document.getElementById('error-email').innerHTML = \"\" \r\n            }\r\n        }      \r\n        \r\n            \r\n        \r\n        if (haveErrors ===false){\r\n            const response = await fetch(\"http://localhost:3000/register\", {\r\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n                mode: 'cors', // no-cors, *cors, same-origin\r\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: 'same-origin', // include, *same-origin, omit\r\n                headers: {\r\n                'Content-Type': 'application/json'\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: 'follow', // manual, *follow, error\r\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(user) // body data type must match \"Content-Type\" header\r\n            });\r\n            if(response.ok){\r\n                push(\"/\");\r\n            }\r\n            if(response.status === 400){\r\n                document.getElementById('error-passwordval').innerHTML = \"Kasutajatunnus või e-mail juba kasutusel!\"\r\n            }    \r\n        }\r\n        haveErrors = false;\r\n\r\n\r\n    }\r\n    </script>\r\n    <div class=\"container\">\r\n        <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\"> \r\n        <h2 class=\"title\">Registreeru</h2>\r\n        <form class=\"container\">\r\n        <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Sisesta kasutajatunnus:</p>\r\n        <input type=\"text\" placeholder=\"Kasutajatunnus\" bind:value=\"{user.name}\"><span class=\"errormsg\" id=\"error-username\"></span>\r\n        <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Sisesta email:</p>\r\n        <input type=\"text\" placeholder=\"Email\" bind:value=\"{user.email}\"><span class=\"errormsg\" id=\"error-email\"></span><span class=\"errormsg\" id=\"error-email2\"></span>\r\n        <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Sisesta parool:</p>\r\n        <input type=\"password\" placeholder=\"Parool\" bind:value=\"{user.password}\"><span class=\"errormsg\" id=\"error-password\"></span>\r\n        <span class=\"errormsg\" id=\"error-password2\"></span>\r\n        <p style=\"padding-left: 10px; padding-right: 10px; text-align: left;\">Sisesta uuesti parool:</p>\r\n        <input type=\"password\" placeholder=\"Parool\" bind:value=\"{passwordVal}\"><span class=\"errormsg\" id=\"error-passwordval\"></span>\r\n        <input type=\"submit\" value=\"REGISTREERU\" on:click|preventDefault=\"{register}\">   \r\n        <button on:click|preventDefault=\"{() => {push('/')}}\">Pealehele</button>\r\n        </form>\r\n    </div>\r\n    \r\n    <style>\r\n        \r\n    \r\n        \r\n    </style>","<script>\r\n    import {push} from \"svelte-spa-router\";       \r\n       \r\n    let activity = {\r\n    roomkey : sessionStorage.getItem('roomkey')\r\n    };\r\n    if(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n           // Redirect to login page\r\n           push(\"/\");\r\n       }\r\n    async function deleteRoomkey(){       \r\n        const response = await fetch(\"http://localhost:3000/deleteroomkey\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization' : sessionStorage.getItem('token')\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(activity) // body data type must match \"Content-Type\" header\r\n        });\r\n        if(response.ok){\r\n            \r\n            sessionStorage.removeItem('roomkey');\r\n            push(\"/userpanel\");\r\n        }\r\n    }\r\n    </script>\r\n    <div class=\"container\">\r\n        <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n        <h2 class=\"title\">Aktiivne küsitlus</h2>\r\n        <p>Toa kood: </p>\r\n        <h2 class=\"boxtext\">{sessionStorage.getItem('roomkey')}</h2>\r\n\r\n        <button on:click|preventDefault=\"{deleteRoomkey}\">LÕPETA SESSIOON</button>\r\n        <button on:click=\"{() => {push('/startsession')}}\">KOOSTA LISA SESSIOON</button>\r\n    </div>\r\n    \r\n    <style>\r\n    \r\n    \r\n    .boxtext{       \r\n        width: 180px;\r\n        border: 15px solid #56A3A6;\r\n        padding: 50px;\r\n        margin: 10px;\r\n        font-size: 30px;\r\n        font-weight: bold;\r\n        color: #084C61;\r\n        border-radius: 10px;\r\n        -moz-border-radius: 10px;\r\n        -webkit-border-radius: 10px;\r\n    }\r\n    </style>","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n<script>\r\n    import {push} from \"svelte-spa-router\";\r\n\r\n    let rangeArr = {\r\n      answer1 : 1, \r\n      answer2 : 1,\r\n      answer3 : 1,\r\n      answer4 : 1,\r\n      answer5 : 1,\r\n      answer6 : 1\r\n    };\r\n    async function sendAnswer(){\r\n        \r\n        const response = await fetch(\"http://localhost:3000/sendanswer\", {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization' : sessionStorage.getItem('token')\r\n            // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(rangeArr) // body data type must match \"Content-Type\" header\r\n        });\r\n        if(response.ok){\r\n            push(\"/\");\r\n        }\r\n\r\n    }\r\n    \r\n    </script>\r\n    \r\n    <div class=\"questioncontainer\">\r\n      <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n      <p style=\"padding-left: 10px; padding-right: 10px; text-align: left; \">Selles tegevuses pühendusin ainult õppimisele</p>\r\n      <div  class=\"slidecontainer\">\r\n        <input type=\"range\" min=\"1\" max=\"6\" bind:value=\"{rangeArr.answer1}\">\r\n        \r\n      </div>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <p class=\"leftmarking\">Ei nõustu</p>\r\n        <p class=\"rightmarking\">Nõustun</p>\r\n      </div>  \r\n      <p style=\"padding-left: 10px; padding-right: 10px; text-align: left; \">Selles tegevuses teesklesin osalemist</p>\r\n      <div class=\"slidecontainer\">\r\n        <input type=\"range\" min=\"1\" max=\"6\"  bind:value=\"{rangeArr.answer2}\">\r\n      </div>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <p class=\"leftmarking\">Ei nõustu</p>\r\n        <p class=\"rightmarking\">Nõustun</p>\r\n      </div>  \r\n      <p style=\"padding-left: 10px; padding-right: 10px; text-align: left; \">Selles tegevuses meeldis mulle õppida</p>\r\n      <div class=\"slidecontainer\">\r\n        <input type=\"range\" min=\"1\" max=\"6\"  bind:value=\"{rangeArr.answer3}\">\r\n      </div>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <p class=\"leftmarking\">Ei nõustu</p>\r\n        <p class=\"rightmarking\">Nõustun</p>\r\n      </div>  \r\n      <p style=\"padding-left: 10px; padding-right: 10px; text-align: left; \">Selle tegevuse ajal kartsin pisut või olin segaduses</p>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <input type=\"range\" min=\"1\" max=\"6\"  bind:value=\"{rangeArr.answer4}\">\r\n      </div>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <p class=\"leftmarking\">Ei nõustu</p>\r\n        <p class=\"rightmarking\">Nõustun</p>\r\n      </div>  \r\n      <p style=\"padding-left: 10px; padding-right: 10px; text-align: left; \">Selles tegevuses sain õpitust aru</p>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <input type=\"range\" min=\"1\" max=\"6\"  bind:value=\"{rangeArr.answer5}\">\r\n      </div>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <p class=\"leftmarking\">Ei nõustu</p>\r\n        <p class=\"rightmarking\">Nõustun</p>\r\n      </div>  \r\n      <p style=\"padding-left: 10px; padding-right: 10px; text-align: left; \">Sain midagi uut teada või harjutada</p>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <input type=\"range\" min=\"1\" max=\"6\"  bind:value=\"{rangeArr.answer6}\">\r\n      </div>\r\n      <div class=\"slidecontainer\">\r\n        \r\n        <p class=\"leftmarking\">Ei nõustu</p>\r\n        <p class=\"rightmarking\">Nõustun</p>\r\n      </div>  \r\n      \r\n      <button style=\"margin-top: 10px;\" on:click|preventDefault=\"{sendAnswer}\">LÕPETA</button>\r\n      \r\n      \r\n    </div>\r\n    \r\n    <style>\r\n    /*span{\r\n      font-family: 'Montserrat', sans-serif;\r\n      color:#60495A;\r\n      font-size: 75%;\r\n      vertical-align: text-bottom;\r\n    }*/\r\n    .leftmarking{\r\n      font-family: 'Montserrat', sans-serif;\r\n      color:#60495A;\r\n      font-size: 75%;\r\n      \r\n      text-align: left; \r\n      width:49%; \r\n      display: inline-block;\r\n      margin-bottom: 10px;\r\n\t    margin-top: 5px;\r\n    }\r\n    .rightmarking{\r\n      font-family: 'Montserrat', sans-serif;\r\n      color:#60495A;\r\n      font-size: 75%;\r\n      text-align: right; \r\n      width:50%;  \r\n      display: inline-block;\r\n      margin-bottom: 10px;\r\n\t    margin-top: 5px;\r\n      \r\n      \r\n    }\r\n    </style>","<script>\r\n    import \"charts.css\";\r\n    import { push } from \"svelte-spa-router\";\r\n    if(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n        // Redirect to login page\r\n        push(\"/\");\r\n    }\r\n    function logout(){\r\n        sessionStorage.removeItem(\"token\");\r\n        push(\"/\");\r\n    }\r\n    let selectedGroup = {\r\n        group_id: sessionStorage.getItem(\"group_id\"),\r\n    };\r\n\r\n    let activities = {};\r\n\r\n    let data;\r\n\r\n    let activityEmotions = {\r\n        emotion1: 0,\r\n        emotion2: 0,\r\n        emotion3: 0,\r\n    };\r\n    const getAvgOfCols = (\r\n        array,\r\n        start = 0,\r\n        stop = 0,\r\n        isReversed = undefined\r\n    ) => {\r\n        let counter = 0;\r\n        const newArray = array.reduce((acc, cur) => {\r\n            counter += stop + 1 - start;\r\n            return [...acc, ...cur.slice(start, stop + 1)];\r\n        }, []);\r\n        if (isReversed != undefined)\r\n            newArray.forEach((x, i) => {\r\n                if (isReversed[i % isReversed.length]) {\r\n                    newArray[i] = 6 - x;\r\n                }\r\n            });\r\n\r\n        return newArray.reduce((acc, cur) => acc + cur, 0) / counter;\r\n    };\r\n\r\n    (async function getActivities() {\r\n        const response = await fetch(\"http://localhost:3000/getactivities\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                //'Authorization' : sessionStorage.getItem('token')\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(selectedGroup), // body data type must match \"Content-Type\" header\r\n        });\r\n        if (response.ok) {\r\n            data = (await response.json()).rows;\r\n            activities = Array.from(\r\n                new Set(data.map((item) => item.activity_id))\r\n            ).reduce(\r\n                (acc, curr) => ({ ...acc, [curr]: { name: \"\", answers: [] } }),\r\n                {}\r\n            );\r\n            data.forEach(({ activity_id, answer, activity_name }) => {\r\n                activities[activity_id].answers.push(answer);\r\n                activities[activity_id].name = activity_name;\r\n            });\r\n\r\n            let counter = 0;\r\n\r\n            Object.entries(activities).forEach(([, value]) => {\r\n                const { answers } = value;\r\n\r\n                value.emotion1 = getAvgOfCols(answers, 0, 1, [false, true]);\r\n                value.emotion2 = getAvgOfCols(answers, 2, 3, [false, true]);\r\n                value.emotion3 = getAvgOfCols(answers, 4, 5);\r\n            });\r\n\r\n           \r\n\r\n           \r\n            activityEmotions.emotion1 /= counter;\r\n            activityEmotions.emotion2 /= counter;\r\n            activityEmotions.emotion3 /= counter;\r\n            \r\n        }\r\n    })();\r\n</script>\r\n\r\n<div class=\"container\">\r\n    <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n    <h2>Grupi tulemused</h2>\r\n    <p class=\"pageinfo\">Grupp: {sessionStorage.group_name}</p>\r\n    {#each Object.keys(activities) as activity}\r\n        <hr />\r\n        <p style=\"margin-bottom: 130px; text-align: left; padding-left: 10px; color:#60495A; font-family: 'Electrolize', sans-serif; font-weight: bold; \">Tegevus: {activities[activity].name}</p>\r\n        <div class=\"resultcontainer\">\r\n        <table id=\"my-chart\" class=\"charts-css column show-labels data-spacing-20 show-primary-axis \">\r\n            <caption> Bar Example #6 </caption>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\"> Year </th>\r\n                    <th scope=\"col\"> Progress </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Käitumuslik</th>\r\n                    <td style=\"--size:{activities[activity].emotion1};\">\r\n                        <span class=\"data\"\r\n                            >{activities[activity].emotion1.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Emotsionaalne</th>\r\n                    <td style=\"--size:{activities[activity].emotion2}\">\r\n                        <span class=\"data\"\r\n                            >{activities[activity].emotion2.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Kognitiivne</th>\r\n                    <td style=\"--size:{activities[activity].emotion3}\">\r\n                        <span class=\"data\"\r\n                            >{activities[activity].emotion3.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n\r\n        <button on:click=\"{() => {sessionStorage.setItem('activity_id', activity), sessionStorage.setItem('activity_name', activities[activity].name); push('/resultsactivity');}}\">OSALEJATE TULEMUSED</button>\r\n        \r\n    {/each}\r\n    <hr />\r\n    <button on:click|preventDefault=\"{() => {push('/resultssession')}}\">Tagasi</button>\r\n    <button on:click|preventDefault=\"{logout}\">Logi välja</button>\r\n</div>\r\n\r\n<style>\r\n    .resultcontainer {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 80px;\r\n        width: 360px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n    }\r\n    #my-chart.column {\r\n        height: 50px;\r\n        max-width: 360px;\r\n        color: #FBFBFB;\r\n        \r\n        margin: 0 auto;\r\n        width: 435px;\r\n        \r\n        /*box-sizing: border-box;*/\r\n        /*display: flex;\r\n        /*display:block;*/\r\n        /*flex-direction: column;\r\n        /*max-width: 500px;*/\r\n        \r\n        /*margin-left: 0;\r\n        margin-right: 0;\r\n        /*width: 435px;\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n        /*justify-content: center;*/\r\n        /*align-items: center;*/\r\n\r\n        /*position: relative;\r\n        \r\n        \r\n        \r\n        \r\n        background-color: #FBFBFB;\r\n        text-align: center;*/\r\n    }\r\n    /* Single Dataset */\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 1) td {\r\n        background-color: #084C61;\r\n    }\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 2) td {\r\n        background-color: #0C7292;\r\n    }\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 3) td {\r\n        background-color: #1097C0;\r\n    }\r\n    \r\n    hr {\r\n        width: 360px;\r\n        margin-left: auto;\r\n        -right: auto;\r\n    /*height: 1px; \r\n    background-color: #BCABAE;*/\r\n    \r\n    }\r\n    #my-chart tbody td {\r\n        transform-origin: bottom;\r\n        animation: revealing-bars 4s linear;\r\n        animation-iteration-count: 1;\r\n    }\r\n    @keyframes revealing-bars {\r\n        0%  { transform: scaleY( 0 ); }\r\n        15% { transform: scaleY( 1 ); }\r\n    }\r\n\r\n</style>\r\n","<script>\r\n    import 'charts.css';\r\n    import { push } from \"svelte-spa-router\";\r\n    if(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n        // Redirect to login page\r\n        push(\"/\");\r\n    }\r\n    function logout(){\r\n        sessionStorage.removeItem(\"token\");\r\n        push(\"/\");\r\n    }\r\nlet selectedActivity = {\r\n    activity_id : sessionStorage.getItem('activity_id')\r\n};\r\n\r\nlet participants = {};\r\n\r\n    let data;\r\n\r\n    let activityEmotions = {\r\n        emotion1: 0,\r\n        emotion2: 0,\r\n        emotion3: 0,\r\n    };\r\n\r\n    const getAvgOfCols = (\r\n        array,\r\n        start = 0,\r\n        stop = 0,\r\n        isReversed = undefined\r\n    ) => {\r\n        let counter = 0;\r\n\r\n        const newArray = array.reduce((acc, cur) => {\r\n            counter += stop + 1 - start;\r\n            return [...acc, ...cur.slice(start, stop + 1)];\r\n        }, []);\r\n\r\n        if (isReversed != undefined)\r\n            newArray.forEach((x, i) => {\r\n                if (isReversed[i % isReversed.length]) {\r\n                    newArray[i] = 6 - x;\r\n                }\r\n            });\r\n\r\n        return newArray.reduce((acc, cur) => acc + cur, 0) / counter;\r\n    };\r\n\r\n(async function getParticipants() {\r\n        const response = await fetch(\"http://localhost:3000/getparticipants\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                //'Authorization' : sessionStorage.getItem('token')\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(selectedActivity), // body data type must match \"Content-Type\" header\r\n        }      \r\n    )\r\n    if (response.ok) {\r\n            data = (await response.json()).rows;\r\n           \r\n            participants = Array.from(\r\n                new Set(data.map((item) => item.part_id))\r\n            ).reduce(\r\n                (acc, curr) => ({ ...acc, [curr]: { name: \"\", answers: [] } }),\r\n                {}\r\n            );\r\n            data.forEach(({ part_id, answer, part_name }) => {\r\n            \r\n                participants[part_id].answers.push(answer);\r\n                participants[part_id].name = part_name;\r\n            });\r\n\r\n            let counter = 0;\r\n\r\n            Object.entries(participants).forEach(([, value]) => {\r\n                const { answers } = value;\r\n\r\n                value.emotion1 = getAvgOfCols(answers, 0, 1, [false, true]);\r\n                value.emotion2 = getAvgOfCols(answers, 2, 3, [false, true]);\r\n                value.emotion3 = getAvgOfCols(answers, 4, 5);\r\n            });\r\n\r\n            \r\n\r\n            \r\n            activityEmotions.emotion1 /= counter;\r\n            activityEmotions.emotion2 /= counter;\r\n            activityEmotions.emotion3 /= counter;\r\n            \r\n        }})();\r\n\r\n\r\n</script>\r\n<div class=\"container\">\r\n    <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n    <h2>Tegevuse tulemused</h2>\r\n    <p class=\"pageinfo\">Grupp: {sessionStorage.group_name}</p>\r\n    <p class=\"pageinfo\">Tegevus: {sessionStorage.activity_name}</p>\r\n    {#each Object.keys(participants) as participant}\r\n        <hr />\r\n        <p style=\"margin-bottom: 130px; text-align: left; padding-left: 10px; color:#60495A; font-family: 'Electrolize', sans-serif; font-weight: bold;\">Nimi: {participants[participant].name}</p>\r\n        <div class=\"resultcontainer\">\r\n        <table id=\"my-chart\" class=\"charts-css column show-labels data-spacing-20 show-primary-axis \">\r\n            <caption> Bar Example #6 </caption>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\"> Year </th>\r\n                    <th scope=\"col\"> Progress </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Käitumuslik</th>\r\n                    <td style=\"--size:{participants[participant].emotion1};\">\r\n                        <span class=\"data\"\r\n                            >{participants[participant].emotion1.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Emotsionaalne</th>\r\n                    <td style=\"--size:{participants[participant].emotion2}\">\r\n                        <span class=\"data\"\r\n                            >{participants[participant].emotion2.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Kognitiivne</th>\r\n                    <td style=\"--size:{participants[participant].emotion3}\">\r\n                        <span class=\"data\"\r\n                            >{participants[participant].emotion3.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <button on:click=\"{() => {sessionStorage.setItem('part_id', participant), sessionStorage.setItem('part_name', participants[participant].name); push('/resultsparticipant');}}\">OSALEJA TULEMUSED</button>\r\n        \r\n    {/each}\r\n    <hr />\r\n    <button on:click|preventDefault=\"{() => {push('/resultsgroup')}}\">Tagasi</button>\r\n    <button on:click|preventDefault=\"{logout}\">Logi välja</button>\r\n</div>\r\n\r\n<style>\r\n    .resultcontainer {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 80px;\r\n        width: 360px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n    }\r\n    #my-chart.column {\r\n        height: 50px;\r\n        max-width: 360px;\r\n        color: #FBFBFB;\r\n        \r\n        margin: 0 auto;\r\n        width: 435px;\r\n        \r\n        /*box-sizing: border-box;*/\r\n        /*display: flex;\r\n        /*display:block;*/\r\n        /*flex-direction: column;\r\n        /*max-width: 500px;*/\r\n        \r\n        /*margin-left: 0;\r\n        margin-right: 0;\r\n        /*width: 435px;\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n        /*justify-content: center;*/\r\n        /*align-items: center;*/\r\n\r\n        /*position: relative;\r\n        \r\n        \r\n        \r\n        \r\n        background-color: #FBFBFB;\r\n        text-align: center;*/\r\n    }\r\n    /* Single Dataset */\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 1) td {\r\n        background-color: #084C61;\r\n    }\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 2) td {\r\n     background-color: #0C7292;\r\n    }\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 3) td {\r\n        background-color: #1097C0;\r\n    }\r\n    hr {\r\n    width: 360px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n}\r\n#my-chart tbody td {\r\n        transform-origin: bottom;\r\n        animation: revealing-bars 4s linear;\r\n        animation-iteration-count: 1;\r\n    }\r\n    @keyframes revealing-bars {\r\n        0%  { transform: scaleY( 0 ); }\r\n        15% { transform: scaleY( 1 ); }\r\n    }\r\n</style>","<script>\r\n    import 'charts.css';\r\n    import { push } from \"svelte-spa-router\";\r\n    if(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n        // Redirect to login page\r\n        push(\"/\");\r\n    }\r\n    function logout(){\r\n        sessionStorage.removeItem(\"token\");\r\n        push(\"/\");\r\n    }\r\nlet selectedParticipant = {\r\n    part_id : sessionStorage.getItem('part_id'),\r\n    group_id : sessionStorage.getItem('group_id')\r\n};\r\n\r\nlet activities = {};\r\n\r\n    let data;\r\n\r\n    let activityEmotions = {\r\n        emotion1: 0,\r\n        emotion2: 0,\r\n        emotion3: 0,\r\n    };\r\n\r\n    const getAvgOfCols = (\r\n        array,\r\n        start = 0,\r\n        stop = 0,\r\n        isReversed = undefined\r\n    ) => {\r\n        let counter = 0;\r\n\r\n        const newArray = array.reduce((acc, cur) => {\r\n            counter += stop + 1 - start;\r\n            return [...acc, ...cur.slice(start, stop + 1)];\r\n        }, []);\r\n\r\n        if (isReversed != undefined)\r\n            newArray.forEach((x, i) => {\r\n                if (isReversed[i % isReversed.length]) {\r\n                    newArray[i] = 6 - x;\r\n                }\r\n            });\r\n\r\n        return newArray.reduce((acc, cur) => acc + cur, 0) / counter;\r\n    };\r\n\r\n(async function getParticipants() {\r\n        const response = await fetch(\"http://localhost:3000/getparticipantactivities\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                //'Authorization' : sessionStorage.getItem('token')\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(selectedParticipant), // body data type must match \"Content-Type\" header\r\n        }      \r\n    )\r\n    if (response.ok) {\r\n            data = (await response.json()).rows;\r\n            activities = Array.from(\r\n                new Set(data.map((item) => item.activity_id))\r\n            ).reduce(\r\n                (acc, curr) => ({ ...acc, [curr]: { name: \"\", answers: [] } }),\r\n                {}\r\n            );\r\n            data.forEach(({ activity_id, answer, activity_name }) => {\r\n                activities[activity_id].answers.push(answer);\r\n                activities[activity_id].name = activity_name;\r\n            });\r\n\r\n            let counter = 0;\r\n\r\n            Object.entries(activities).forEach(([, value]) => {\r\n                const { answers } = value;\r\n\r\n                value.emotion1 = getAvgOfCols(answers, 0, 1, [false, true]);\r\n                value.emotion2 = getAvgOfCols(answers, 2, 3, [false, true]);\r\n                value.emotion3 = getAvgOfCols(answers, 4, 5);\r\n            });\r\n\r\n           \r\n\r\n            \r\n            activityEmotions.emotion1 /= counter;\r\n            activityEmotions.emotion2 /= counter;\r\n            activityEmotions.emotion3 /= counter;\r\n            \r\n        }})();\r\n\r\n\r\n</script>\r\n<div class=\"container\">\r\n    <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n    <h2>Osaleja tulemused</h2>\r\n    <p class=\"pageinfo\">Grupp: {sessionStorage.group_name}</p>\r\n    <p class=\"pageinfo\">Nimi: {sessionStorage.part_name}</p>\r\n    {#each Object.keys(activities) as activity}\r\n        <hr />\r\n        <p style=\"margin-bottom: 130px; text-align: left; padding-left: 10px; color:#60495A; font-family: 'Electrolize', sans-serif; font-weight: bold;\">Tegevus: {activities[activity].name}</p>\r\n        <div class=\"resultcontainer\">\r\n        <table id=\"my-chart\" class=\"charts-css column show-labels data-spacing-20 show-primary-axis \">\r\n            <caption> Bar Example #6 </caption>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\"> Year </th>\r\n                    <th scope=\"col\"> Progress </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Käitumuslik</th>\r\n                    <td style=\"--size:{activities[activity].emotion1};\">\r\n                        <span class=\"data\"\r\n                            >{activities[activity].emotion1.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Emotsionaalne</th>\r\n                    <td style=\"--size:{activities[activity].emotion2}\">\r\n                        <span class=\"data\"\r\n                            >{activities[activity].emotion2.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th scope=\"row\" style=\"color: #084C61; font-size: 75%;\">Kognitiivne</th>\r\n                    <td style=\"--size:{activities[activity].emotion3}\">\r\n                        <span class=\"data\"\r\n                            >{activities[activity].emotion3.toFixed(2)}</span\r\n                        >\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n    {/each}\r\n    <hr />\r\n    <button on:click|preventDefault=\"{() => {push('/resultsactivity')}}\">Tagasi</button>\r\n    <button on:click|preventDefault=\"{logout}\">Logi välja</button>\r\n</div>\r\n\r\n<style>\r\n    .resultcontainer {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 80px;\r\n        width: 360px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n    }\r\n    #my-chart.column {\r\n        height: 50px;\r\n        max-width: 360px;\r\n        color: #FBFBFB;\r\n        \r\n        margin: 0 auto;\r\n        width: 435px;\r\n        \r\n        /*box-sizing: border-box;*/\r\n        /*display: flex;\r\n        /*display:block;*/\r\n        /*flex-direction: column;\r\n        /*max-width: 500px;*/\r\n        \r\n        /*margin-left: 0;\r\n        margin-right: 0;\r\n        /*width: 435px;\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n        /*justify-content: center;*/\r\n        /*align-items: center;*/\r\n\r\n        /*position: relative;\r\n        \r\n        \r\n        \r\n        \r\n        background-color: #FBFBFB;\r\n        text-align: center;*/\r\n    }\r\n    /* Single Dataset */\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 1) td {\r\n        background-color: #084C61;\r\n    }\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 2) td {\r\n        background-color: #0C7292;\r\n    }\r\n    #my-chart:not(.multiple) tbody tr:nth-of-type(3n + 3) td {\r\n        background-color: #1097C0;\r\n    }\r\n    hr {\r\n        width: 360px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n    #my-chart tbody td {\r\n        transform-origin: bottom;\r\n        animation: revealing-bars 4s linear;\r\n        animation-iteration-count: 1;\r\n    }\r\n    @keyframes revealing-bars {\r\n        0%  { transform: scaleY( 0 ); }\r\n        15% { transform: scaleY( 1 ); }\r\n    }\r\n</style>\r\n","<script>\r\n    import \"charts.css\";\r\n    import { group_outros } from \"svelte/internal\";\r\n    import { writable } from \"svelte/store\";\r\n    import { push } from \"svelte-spa-router\";\r\n    if(sessionStorage.getItem(\"token\") == null) {\r\n           \r\n           // Redirect to login page\r\n           push(\"/\");\r\n       }\r\n    function logout(){\r\n        sessionStorage.removeItem(\"token\");\r\n        push(\"/\");\r\n    }\r\n    let participants = {};\r\n\r\n    let activity1 = false;\r\n    let participant1 = false;\r\n\r\n    let activities = {};\r\n\r\n    let store = writable(0);\r\n\r\n    let data;\r\n\r\n    let selected1 = {\r\n        group_id: null,\r\n        activity_id: null,\r\n        part_id: null,\r\n    };\r\n\r\n    const graphs = [];\r\n\r\n    async function listGroup() {\r\n        const response = await fetch(\"http://localhost:3000/listgroup\", {\r\n            method: \"GET\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: sessionStorage.getItem(\"token\"),\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n            //push(\"/\");\r\n        }\r\n    }\r\n\r\n    async function listActivities(input) {\r\n        const response = await fetch(\"http://localhost:3000/listactivities\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(input),\r\n        });\r\n        if (response.ok) {\r\n            return await response.json();\r\n            //push(\"/\");\r\n        }\r\n    }\r\n\r\n    async function listParticipants(input) {\r\n        const response = await fetch(\"http://localhost:3000/listparticipants\", {\r\n            method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n            mode: \"cors\", // no-cors, *cors, same-origin\r\n            cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: \"same-origin\", // include, *same-origin, omit\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: \"follow\", // manual, *follow, error\r\n            referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(input),\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n            //push(\"/\");\r\n        }\r\n    }\r\n\r\n    \r\n    let activityEmotions = {\r\n        emotion1: 0,\r\n        emotion2: 0,\r\n        emotion3: 0,\r\n    };\r\n    const getAvgOfCols = (\r\n        array,\r\n        start = 0,\r\n        stop = 0,\r\n        isReversed = undefined\r\n    ) => {\r\n        const newArray = array.slice(start, stop + 1);\r\n        if (isReversed != undefined)\r\n            newArray.forEach((x, i) => {\r\n                if (isReversed[i % isReversed.length]) {\r\n                    newArray[i] = 6 - x;\r\n                }\r\n            });\r\n\r\n        return newArray.reduce((acc, cur) => acc + cur, 0) / newArray.length;\r\n    };\r\n\r\n    async function getComparisonData(input) {\r\n        \r\n        const parsed = Object.entries(input).reduce((acc, [key, value]) => {\r\n            \r\n            if (value !== null && value !== 'null') return { ...acc, [key]: value };\r\n            return acc;\r\n        }, {});\r\n//null returns as \"null\"\r\n        const response = await fetch(\r\n            \"http://localhost:3000/getcomparisondata\",\r\n            {\r\n                method: \"POST\", // *GET, POST, PUT, DELETE, etc.\r\n                mode: \"cors\", // no-cors, *cors, same-origin\r\n                cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\r\n                credentials: \"same-origin\", // include, *same-origin, omit\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n                redirect: \"follow\", // manual, *follow, error\r\n                referrerPolicy: \"no-referrer\", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n                body: JSON.stringify(parsed),\r\n            }\r\n        );\r\n        if (response.ok) {\r\n            data = (await response.json()).rows;\r\n            \r\n            let counter = 0;\r\n           \r\n            let totalEmotion = {\r\n                emotion1 : 0,\r\n                emotion2 : 0,\r\n                emotion3 : 0\r\n            };\r\n\r\n            for (let i of data) {\r\n                activityEmotions.emotion1 = i.emotion1 = getAvgOfCols(\r\n                    i.answer,\r\n                    0,\r\n                    1,\r\n                    [false, true]\r\n                );\r\n                activityEmotions.emotion2 = i.emotion2 = getAvgOfCols(\r\n                    i.answer,\r\n                    2,\r\n                    3,\r\n                    [false, true]\r\n                );\r\n                activityEmotions.emotion3 = i.emotion3 = getAvgOfCols(\r\n                    i.answer,\r\n                    4,\r\n                    5\r\n                );\r\n                \r\n\r\n                totalEmotion.emotion1 += activityEmotions.emotion1;\r\n                totalEmotion.emotion2 += activityEmotions.emotion2;\r\n                totalEmotion.emotion3 += activityEmotions.emotion3;\r\n                counter += 1;\r\n            }\r\n            totalEmotion.emotion1 /= counter;\r\n            totalEmotion.emotion2 /= counter;\r\n            totalEmotion.emotion3  /= counter;\r\n            \r\n\r\n                let chartList = document.getElementById('charts');\r\n                let appendable = document.createElement('tr'); \r\n                \r\n                for (let i = 0; i < 3; i++) { \r\n                    let appendable2 = document.createElement('td');\r\n                    let numb = totalEmotion[`emotion${i+1}`];\r\n                    appendable2.setAttribute('style', `--size:${numb}`);\r\n                    appendable2.textContent = totalEmotion[`emotion${i+1}`];    \r\n                    appendable.appendChild(appendable2);\r\n                    \r\n                    \r\n                }\r\n                           \r\n                chartList.appendChild(appendable);\r\n                   \r\n        }\r\n    }\r\n</script>\r\n<div class=\"container\">\r\n<div class=\"container\">\r\n    <img src=\"../pictures\\logo.png\" alt=\"Harlog logo\">\r\n    <h2 class=\"title\">Tulemuste võrdlus:</h2>\r\n    <form>\r\n        <label for=\"groups\">Vali esimene grupp</label>\r\n        <!-- svelte-ignore a11y-no-onchange -->\r\n        <select\r\n            bind:value={selected1.group_id}\r\n            on:change={() => {\r\n                activity1 = true;\r\n            }}\r\n            \r\n        >\r\n            <option value={null}>Select group</option>\r\n            {#await listGroup()}\r\n                <p>Loading groups...</p>\r\n            {:then groups}\r\n                {#each groups as group}\r\n                    <option value={group.group_id}>{group.group_name}</option>\r\n                {/each}\r\n            {/await}\r\n        </select>\r\n        {#if activity1}\r\n            \r\n            <!-- svelte-ignore a11y-no-onchange -->\r\n            <select\r\n                on:change={() => {\r\n                    participant1 = true;                   \r\n                }}\r\n                on:change={selected1.activity_id = this.value}\r\n            >\r\n                <option value={null}>Select activity</option>\r\n                {#await listActivities(selected1)}\r\n                    <p>Loading activities...</p>\r\n                {:then activities}\r\n                    {#each activities as activity}\r\n                        \r\n                        <option value={activity.activity_id}\r\n                            >{activity.activity_name}</option\r\n                        >\r\n                    {/each}\r\n                {/await}\r\n            </select>\r\n        {/if}\r\n        {#if participant1}\r\n            <!-- svelte-ignore a11y-no-onchange -->\r\n            <select on:change={selected1.part_id = this.value}>\r\n                <option value={null}>Select participant </option>\r\n                {#await listParticipants(selected1)}\r\n                    <p>Loading participants...</p>\r\n                {:then participants}\r\n                    {#each participants as participant}\r\n                        <option value={participant.part_id}\r\n                            >{participant.part_name}</option\r\n                        >\r\n                    {/each}\r\n                {/await}\r\n            </select>\r\n        {/if}\r\n    </form>\r\n    <button\r\n        on:click={() => {\r\n            window.location.reload();\r\n        }}\r\n    >Reset</button>\r\n    <button\r\n        on:click={() => {\r\n            getComparisonData(selected1);\r\n        }}\r\n    >Lisa võrdlusesse</button>\r\n</div>\r\n<br>\r\n<p style=\"margin-bottom: 130px; text-align: left; padding-left: 10px; color:#60495A; font-family: 'Electrolize', sans-serif; font-weight: bold; \"></p>\r\n<div class=\"resultcontainer\">\r\n    \r\n    <table id=\"my-chart\" class=\"charts-css column multiple data-spacing-3 show-labels show-primary-axis\">\r\n        <caption> Column Example #5 </caption>\r\n        <tbody id=\"charts\">\r\n        \r\n          \r\n        </tbody>\r\n    </table>\r\n  \r\n</div>\r\n<hr />\r\n<button on:click|preventDefault=\"{() => {push('/userpanel')}}\">Tagasi</button>\r\n<button on:click|preventDefault=\"{logout}\">Logi välja</button>\r\n</div>\r\n<style>\r\n    /*#column-example-5 {\r\n        height: 40px;\r\n        max-width: 300px;\r\n        margin: 0 auto;\r\n    }*/\r\n    /*.onetime-container {  \r\n\tbox-sizing: border-box;\r\n    display: flex;\r\n\t/*display:block;*/\r\n    /*flex-direction: column;\r\n    /*max-width: 500px;*/\r\n    /*margin: 0 auto;\r\n\tmargin-left: 0;\r\n\tmargin-right: 0;\r\n\twidth: 900px;\r\n\tpadding-left: 0;\r\n\tpadding-right: 0;\r\n\t/*justify-content: center;*/\r\n  \t/*align-items: center;*/\r\n\r\n\t/*position: relative;\r\n\t\r\n\t  \r\n\t\r\n\theight: 100%;\r\n\tbackground-color: #FBFBFB;\r\n\ttext-align: center;\r\n    }*/\r\n    .resultcontainer {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 80px;\r\n        width: 360px;\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n    }\t\r\n\r\n    hr {\r\n        width: 360px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n    select{\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 0 auto;\r\n        width: 360px;\r\n        margin-right: 10px;\r\n        margin-left: 10px;\r\n        margin-top: 5px;\r\n        margin-bottom: 5px;\r\n    }\r\n    #my-chart.column {\r\n            height: 50px;\r\n            max-width: 360px;\r\n            color: #FBFBFB;\r\n            \r\n            margin: 0 auto;\r\n            width: 435px;\r\n            \r\n            /*box-sizing: border-box;*/\r\n            /*display: flex;\r\n            /*display:block;*/\r\n            /*flex-direction: column;\r\n            /*max-width: 500px;*/\r\n            \r\n            /*margin-left: 0;\r\n            margin-right: 0;\r\n            /*width: 435px;\r\n            padding-left: 0;\r\n            padding-right: 0;\r\n            /*justify-content: center;*/\r\n            /*align-items: center;*/\r\n\r\n            /*position: relative;\r\n            \r\n            \r\n            \r\n            \r\n            background-color: #FBFBFB;\r\n            text-align: center;*/\r\n        }\r\n        #my-chart {\r\n  --color-1: #084C61;\r\n  --color-2: #7f959c;\r\n  --color-3: #1097C0;\r\n  --color-4: rgba(230, 30, 30, 0.6);\r\n  --color-5: rgba(230, 30, 30, 1.0);\r\n  --color-6: rgba(230, 30, 30, 1.0);\r\n  --color-7: rgba(230, 30, 30, 0.8);\r\n  --color-8: rgba(230, 30, 30, 0.6);\r\n  --color-9: rgba(230, 30, 30, 0.4);\r\n  --color-10: rgba(230, 30, 30, 0.2);\r\n}\r\n        /* Multiple Datasets */\r\n        /*#my-chart.multiple tbody tr td:nth-of-type(3n + 1) td {\r\n            background-color: #084C61;\r\n        }\r\n        #my-chart.multiple tbody tr td:nth-of-type(3n + 2) {\r\n            background-color: #7f959c;\r\n        }\r\n        #my-chart.multiple tbody tr td:nth-of-type(3n + 3) {\r\n            background-color: #1097C0;\r\n        }*/\r\n        hr {\r\n            width: 360px;\r\n            margin-left: auto;\r\n            -right: auto;\r\n        /*height: 1px; \r\n        background-color: #BCABAE;*/\r\n        \r\n        }\r\n        /*#my-chart tbody td {\r\n            transform-origin: bottom;\r\n            animation: revealing-bars 4s linear;\r\n            animation-iteration-count: 1;\r\n        }\r\n        @keyframes revealing-bars {\r\n            0%  { transform: scaleY( 0 ); }\r\n            15% { transform: scaleY( 1 ); }\r\n        }*/\r\n       \r\n</style>\r\n","<script>\r\nimport Router from \"svelte-spa-router\";\r\nimport Homepage from \"./routes/Homepage.svelte\";\r\nimport Userpanel from \"./routes/Userpanel.svelte\";\r\nimport StartSession from \"./routes/StartSession.svelte\";\r\nimport ResultsSession from \"./routes/ResultsSession.svelte\";\r\nimport RegisterPage from \"./routes/RegisterPage.svelte\";\r\nimport ActiveSession from \"./routes/ActiveSession.svelte\";\r\nimport QuestionPage from \"./routes/QuestionPage.svelte\";\r\nimport ResultsGroup from \"./routes/ResultsGroup.svelte\";\r\nimport ResultsActivity from \"./routes/ResultsActivity.svelte\";\r\nimport ResultsParticipant from \"./routes/ResultsParticipant.svelte\";\r\nimport ComparisonGroup from \"./routes/ComparisonGroup.svelte\";\r\n\r\nconst routes = {'/': Homepage,\r\n'/userpanel': Userpanel, \r\n'/startsession': StartSession, \r\n'/resultssession': ResultsSession,\r\n'/registerpage': RegisterPage,\r\n'/activesession': ActiveSession,\r\n'/questionpage' : QuestionPage,\r\n'/resultsgroup' : ResultsGroup,\r\n'/resultsactivity' : ResultsActivity,\r\n'/resultsparticipant' : ResultsParticipant,\r\n'/comparisongroup' : ComparisonGroup };\r\n</script>\r\n<div class=\"router-div\">\r\n<Router {routes}/>\r\n</div>\r\n\r\n<style>\r\n.router-div {\r\n\tmargin: 70px 170px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n}\r\n\r\n</style>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","push","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","index","resolved","child_ctx","undefined","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","get_spread_update","levels","updates","to_null_out","accounted_for","$$scope","n","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","readable","start","subscribe","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","cleanup","sync","result","unsubscribers","store","unsub","unsubscribe","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","charAt","history","replaceState","scrollX","scrollY","hash","routes","prefix","restoreScrollState","RouteItem","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","regexparam","conditions","userData","_pattern","_keys","startsWith","match","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","state","scrollTo","lastLoc","componentObj","newLoc","checkConditions","loading","loadingParams","loaded","default","scrollRestoration","$loc","part_name","part_email","roomkey","password","roomExists","user","quizParticipant","roomKey","haveErrors","getElementById","innerHTML","response","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrerPolicy","body","JSON","stringify","ok","json","sessionStorage","setItem","status","haveErrorsQuiz","test","haveErrorsRoom","activity_id","getItem","removeItem","group_name","Authorization","listGroup","activity_name","group","activity","incognito","createActivity","group_id","haveErrors2","groupList","getElementsByClassName","appendable","button","textContent","onclick","email","passwordVal","answer1","answer2","answer3","answer4","answer5","answer6","rangeArr","emotion1","toFixed","emotion2","emotion3","selectedGroup","activities","getAvgOfCols","array","isReversed","counter","newArray","reduce","acc","cur","x","rows","item","curr","answers","answer","entries","selectedActivity","participants","part_id","participant","selectedParticipant","listActivities","listParticipants","activity1","participant1","selected1","activityEmotions","getComparisonData","parsed","totalEmotion","chartList","appendable2","numb","selected_option","querySelector","reload","/","Homepage","/userpanel","Userpanel","/startsession","StartSession","/resultssession","ResultsSession","/registerpage","RegisterPage","/activesession","ActiveSession","/questionpage","QuestionPage","/resultsgroup","ResultsGroup","/resultsactivity","ResultsActivity","/resultsparticipant","ResultsParticipant","/comparisongroup","ComparisonGroup"],"mappings":"gCAAA,SAASA,KAET,SAASC,EAAOC,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAUX,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAkKhF,SAASE,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAEhC,SAASQ,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASI,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IAEhB,SAASK,EAAOvB,EAAMwB,EAAOC,EAASC,GAElC,OADA1B,EAAK2B,iBAAiBH,EAAOC,EAASC,GAC/B,IAAM1B,EAAK4B,oBAAoBJ,EAAOC,EAASC,GAE1D,SAASG,EAAgB3C,GACrB,OAAO,SAAUsC,GAGb,OAFAA,EAAMM,iBAEC5C,EAAG6C,KAAKC,KAAMR,IAiB7B,SAASS,EAAKjC,EAAMkC,EAAWC,GACd,MAATA,EACAnC,EAAKoC,gBAAgBF,GAChBlC,EAAKqC,aAAaH,KAAeC,GACtCnC,EAAKsC,aAAaJ,EAAWC,GAkDrC,SAASI,EAAUJ,GACf,MAAiB,KAAVA,EAAe,MAAQA,EA6ClC,SAASK,EAAStB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKuB,YAActB,IACnBD,EAAKC,KAAOA,GAEpB,SAASuB,EAAgBC,EAAOR,GAC5BQ,EAAMR,MAAiB,MAATA,EAAgB,GAAKA,EAUvC,SAASS,EAAU5C,EAAM6C,EAAKV,EAAOW,GACjC9C,EAAK+C,MAAMC,YAAYH,EAAKV,EAAOW,EAAY,YAAc,IAEjE,SAASG,EAAcC,EAAQf,GAC3B,IAAK,IAAIxB,EAAI,EAAGA,EAAIuC,EAAOxB,QAAQd,OAAQD,GAAK,EAAG,CAC/C,MAAMwC,EAASD,EAAOxB,QAAQf,GAC9B,GAAIwC,EAAOC,UAAYjB,EAEnB,YADAgB,EAAOE,UAAW,IAkQ9B,IAAIC,EACJ,SAASC,EAAsBC,GAC3BF,EAAoBE,EAExB,SAASC,IACL,IAAKH,EACD,MAAM,IAAII,MAAM,oDACpB,OAAOJ,EAcX,SAASK,IACL,MAAMH,EAAYC,IAClB,MAAO,CAACG,EAAMC,KACV,MAAMC,EAAYN,EAAUO,GAAGD,UAAUF,GACzC,GAAIE,EAAW,CAGX,MAAMtC,EApNlB,SAAsBoC,EAAMC,GACxB,MAAMG,EAAIhD,SAASiD,YAAY,eAE/B,OADAD,EAAEE,gBAAgBN,GAAM,GAAO,EAAOC,GAC/BG,EAiNeG,CAAaP,EAAMC,GACjCC,EAAUM,QAAQ5E,SAAQN,IACtBA,EAAG6C,KAAKyB,EAAWhC,QAiBnC,SAAS6C,EAAOb,EAAWhC,GACvB,MAAMsC,EAAYN,EAAUO,GAAGD,UAAUtC,EAAMoC,MAC3CE,GACAA,EAAUM,QAAQ5E,SAAQN,GAAMA,EAAGsC,KAI3C,MAAM8C,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EACvB,SAASC,IACAD,IACDA,GAAmB,EACnBH,EAAiBK,KAAKC,IAG9B,SAASC,IAEL,OADAH,IACOJ,EAEX,SAASQ,EAAoBhG,GACzBsF,EAAiBW,KAAKjG,GAK1B,IAAIkG,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASN,IACL,IAAII,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIzE,EAAI,EAAGA,EAAI2D,EAAiB1D,OAAQD,GAAK,EAAG,CACjD,MAAM6C,EAAYc,EAAiB3D,GACnC4C,EAAsBC,GACtB+B,EAAO/B,EAAUO,IAIrB,IAFAR,EAAsB,MACtBe,EAAiB1D,OAAS,EACnB2D,EAAkB3D,QACrB2D,EAAkBiB,KAAlBjB,GAIJ,IAAK,IAAI5D,EAAI,EAAGA,EAAI6D,EAAiB5D,OAAQD,GAAK,EAAG,CACjD,MAAM8E,EAAWjB,EAAiB7D,GAC7B0E,EAAeK,IAAID,KAEpBJ,EAAeM,IAAIF,GACnBA,KAGRjB,EAAiB5D,OAAS,QACrB0D,EAAiB1D,QAC1B,KAAO6D,EAAgB7D,QACnB6D,EAAgBe,KAAhBf,GAEJI,GAAmB,EACnBO,GAAW,EACXC,EAAeO,SAEnB,SAASL,EAAOxB,GACZ,GAAoB,OAAhBA,EAAG8B,SAAmB,CACtB9B,EAAGwB,SACHjG,EAAQyE,EAAG+B,eACX,MAAMC,EAAQhC,EAAGgC,MACjBhC,EAAGgC,MAAQ,EAAE,GACbhC,EAAG8B,UAAY9B,EAAG8B,SAASG,EAAEjC,EAAGkC,IAAKF,GACrChC,EAAGmC,aAAa1G,QAAQ0F,IAiBhC,MAAMiB,EAAW,IAAIb,IACrB,IAAIc,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACRhH,EAAQ8G,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAM/F,IACfwF,EAASS,OAAOF,GAChBA,EAAM/F,EAAEgG,IAGhB,SAASE,EAAeH,EAAOC,EAAOtG,EAAQoF,GAC1C,GAAIiB,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAEpB,MAAK,KACVgB,EAASS,OAAOF,GACZjB,IACIpF,GACAqG,EAAM7F,EAAE,GACZ4E,QAGRiB,EAAMI,EAAEH,IAoOhB,SAASI,EAAeC,EAASC,GAC7B,MAAMC,EAAQD,EAAKC,MAAQ,GAC3B,SAAS3B,EAAO3B,EAAMuD,EAAOtE,EAAKV,GAC9B,GAAI8E,EAAKC,QAAUA,EACf,OACJD,EAAKG,SAAWjF,EAChB,IAAIkF,EAAYJ,EAAKhB,SACTqB,IAARzE,IACAwE,EAAYA,EAAUjD,QACtBiD,EAAUxE,GAAOV,GAErB,MAAMuE,EAAQ9C,IAASqD,EAAKM,QAAU3D,GAAMyD,GAC5C,IAAIG,GAAc,EACdP,EAAKP,QACDO,EAAKQ,OACLR,EAAKQ,OAAOjI,SAAQ,CAACkH,EAAO/F,KACpBA,IAAMwG,GAAST,IACfL,IACAQ,EAAeH,EAAO,EAAG,GAAG,KACpBO,EAAKQ,OAAO9G,KAAO+F,IACnBO,EAAKQ,OAAO9G,GAAK,SAGzB6F,QAKRS,EAAKP,MAAM7F,EAAE,GAEjB6F,EAAMH,IACNE,EAAcC,EAAO,GACrBA,EAAMgB,EAAET,EAAKU,QAASV,EAAK9G,QAC3BqH,GAAc,GAElBP,EAAKP,MAAQA,EACTO,EAAKQ,SACLR,EAAKQ,OAAON,GAAST,GACrBc,GACAxC,IAGR,IArjCgB7C,EAqjCD6E,IApjCkB,iBAAV7E,GAA4C,mBAAfA,EAAM4C,KAojCjC,CACrB,MAAMzB,EAAoBG,IAc1B,GAbAuD,EAAQjC,MAAK5C,IACToB,EAAsBD,GACtBiC,EAAO0B,EAAKlC,KAAM,EAAGkC,EAAK9E,MAAOA,GACjCoB,EAAsB,SACvBqE,IAIC,GAHArE,EAAsBD,GACtBiC,EAAO0B,EAAKY,MAAO,EAAGZ,EAAKW,MAAOA,GAClCrE,EAAsB,OACjB0D,EAAKa,SACN,MAAMF,KAIVX,EAAKM,UAAYN,EAAKc,QAEtB,OADAxC,EAAO0B,EAAKc,QAAS,IACd,MAGV,CACD,GAAId,EAAKM,UAAYN,EAAKlC,KAEtB,OADAQ,EAAO0B,EAAKlC,KAAM,EAAGkC,EAAK9E,MAAO6E,IAC1B,EAEXC,EAAKG,SAAWJ,EA9kCxB,IAAoB7E,EA+rCpB,SAAS6F,EAAkBC,EAAQC,GAC/B,MAAM3C,EAAS,GACT4C,EAAc,GACdC,EAAgB,CAAEC,QAAS,GACjC,IAAI1H,EAAIsH,EAAOrH,OACf,KAAOD,KAAK,CACR,MAAMmG,EAAImB,EAAOtH,GACX2H,EAAIJ,EAAQvH,GAClB,GAAI2H,EAAG,CACH,IAAK,MAAMzF,KAAOiE,EACRjE,KAAOyF,IACTH,EAAYtF,GAAO,GAE3B,IAAK,MAAMA,KAAOyF,EACTF,EAAcvF,KACf0C,EAAO1C,GAAOyF,EAAEzF,GAChBuF,EAAcvF,GAAO,GAG7BoF,EAAOtH,GAAK2H,OAGZ,IAAK,MAAMzF,KAAOiE,EACdsB,EAAcvF,GAAO,EAIjC,IAAK,MAAMA,KAAOsF,EACRtF,KAAO0C,IACTA,EAAO1C,QAAOyE,GAEtB,OAAO/B,EAEX,SAASgD,EAAkBC,GACvB,MAA+B,iBAAjBA,GAA8C,OAAjBA,EAAwBA,EAAe,GAkJtF,SAASC,EAAiB/B,GACtBA,GAASA,EAAMH,IAKnB,SAASmC,EAAgBlF,EAAWzD,EAAQI,EAAQwI,GAChD,MAAM9C,SAAEA,EAAQ+C,SAAEA,EAAQC,WAAEA,EAAU3C,aAAEA,GAAiB1C,EAAUO,GACnE8B,GAAYA,EAAS6B,EAAE3H,EAAQI,GAC1BwI,GAEDzD,GAAoB,KAChB,MAAM4D,EAAiBF,EAASG,IAAI9J,GAAK+J,OAAOvJ,GAC5CoJ,EACAA,EAAW1D,QAAQ2D,GAKnBxJ,EAAQwJ,GAEZtF,EAAUO,GAAG6E,SAAW,MAGhC1C,EAAa1G,QAAQ0F,GAEzB,SAAS+D,EAAkBzF,EAAW9C,GAClC,MAAMqD,EAAKP,EAAUO,GACD,OAAhBA,EAAG8B,WACHvG,EAAQyE,EAAG8E,YACX9E,EAAG8B,UAAY9B,EAAG8B,SAAShF,EAAEH,GAG7BqD,EAAG8E,WAAa9E,EAAG8B,SAAW,KAC9B9B,EAAGkC,IAAM,IAWjB,SAASiD,EAAK1F,EAAW9B,EAASyH,EAAUC,EAAiBC,EAAWC,EAAOvD,EAAQ,EAAE,IACrF,MAAMwD,EAAmBjG,EACzBC,EAAsBC,GACtB,MAAMO,EAAKP,EAAUO,GAAK,CACtB8B,SAAU,KACVI,IAAK,KAELqD,MAAAA,EACA/D,OAAQ3G,EACRyK,UAAAA,EACAG,MAAOrK,IAEPyJ,SAAU,GACVC,WAAY,GACZY,cAAe,GACf3D,cAAe,GACfI,aAAc,GACdwD,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiBxF,GAAG2F,QAAUhI,EAAQgI,SAAW,IAErF5F,UAAW3E,IACX4G,MAAAA,EACA6D,YAAY,GAEhB,IAAIC,GAAQ,EAkBZ,GAjBA9F,EAAGkC,IAAMkD,EACHA,EAAS3F,EAAW9B,EAAQ4H,OAAS,IAAI,CAAC3I,EAAGmJ,KAAQC,KACnD,MAAM5H,EAAQ4H,EAAKnJ,OAASmJ,EAAK,GAAKD,EAOtC,OANI/F,EAAGkC,KAAOoD,EAAUtF,EAAGkC,IAAItF,GAAIoD,EAAGkC,IAAItF,GAAKwB,MACtC4B,EAAG6F,YAAc7F,EAAGyF,MAAM7I,IAC3BoD,EAAGyF,MAAM7I,GAAGwB,GACZ0H,GAtCpB,SAAoBrG,EAAW7C,IACI,IAA3B6C,EAAUO,GAAGgC,MAAM,KACnBzB,EAAiBa,KAAK3B,GACtBsB,IACAtB,EAAUO,GAAGgC,MAAMiE,KAAK,IAE5BxG,EAAUO,GAAGgC,MAAOpF,EAAI,GAAM,IAAO,GAAMA,EAAI,GAiC/BsJ,CAAWzG,EAAW7C,IAEvBmJ,KAET,GACN/F,EAAGwB,SACHsE,GAAQ,EACRvK,EAAQyE,EAAG+B,eAEX/B,EAAG8B,WAAWuD,GAAkBA,EAAgBrF,EAAGkC,KAC/CvE,EAAQ3B,OAAQ,CAChB,GAAI2B,EAAQwI,QAAS,CACjB,MAAMC,EA9oClB,SAAkBrJ,GACd,OAAOsJ,MAAMC,KAAKvJ,EAAQwJ,YA6oCJC,CAAS7I,EAAQ3B,QAE/BgE,EAAG8B,UAAY9B,EAAG8B,SAAS2E,EAAEL,GAC7BA,EAAM3K,QAAQa,QAId0D,EAAG8B,UAAY9B,EAAG8B,SAASU,IAE3B7E,EAAQ+I,OACRhE,EAAcjD,EAAUO,GAAG8B,UAC/B6C,EAAgBlF,EAAW9B,EAAQ3B,OAAQ2B,EAAQvB,OAAQuB,EAAQiH,eACnE3D,IAEJzB,EAAsBgG,GAkD1B,MAAMmB,GACFC,WACI1B,EAAkBjH,KAAM,GACxBA,KAAK4I,SAAWhM,EAEpB+L,IAAI/G,EAAM6B,GACN,MAAM3B,EAAa9B,KAAK+B,GAAGD,UAAUF,KAAU5B,KAAK+B,GAAGD,UAAUF,GAAQ,IAEzE,OADAE,EAAUqB,KAAKM,GACR,KACH,MAAM0B,EAAQrD,EAAU+G,QAAQpF,IACjB,IAAX0B,GACArD,EAAUgH,OAAO3D,EAAO,IAGpCwD,KAAKI,GA//CT,IAAkBC,EAggDNhJ,KAAKiJ,QAhgDCD,EAggDkBD,EA//CG,IAA5B3L,OAAO8L,KAAKF,GAAKpK,UAggDhBoB,KAAK+B,GAAG6F,YAAa,EACrB5H,KAAKiJ,MAAMF,GACX/I,KAAK+B,GAAG6F,YAAa,ICliDjC,MAAMuB,GAAmB,GAMzB,SAASC,GAASjJ,EAAOkJ,GACrB,MAAO,CACHC,UAAWC,GAASpJ,EAAOkJ,GAAOC,WAQ1C,SAASC,GAASpJ,EAAOkJ,EAAQzM,GAC7B,IAAI4M,EACJ,MAAMC,EAAc,GACpB,SAASC,EAAIC,GACT,GAAIhM,EAAewC,EAAOwJ,KACtBxJ,EAAQwJ,EACJH,GAAM,CACN,MAAMI,GAAaT,GAAiBvK,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAI8K,EAAY7K,OAAQD,GAAK,EAAG,CAC5C,MAAMkL,EAAIJ,EAAY9K,GACtBkL,EAAE,KACFV,GAAiBhG,KAAK0G,EAAG1J,GAE7B,GAAIyJ,EAAW,CACX,IAAK,IAAIjL,EAAI,EAAGA,EAAIwK,GAAiBvK,OAAQD,GAAK,EAC9CwK,GAAiBxK,GAAG,GAAGwK,GAAiBxK,EAAI,IAEhDwK,GAAiBvK,OAAS,IA0B1C,MAAO,CAAE8K,IAAAA,EAAKnG,OArBd,SAAgBrG,GACZwM,EAAIxM,EAAGiD,KAoBWmJ,UAlBtB,SAAmBrM,EAAK6M,EAAalN,GACjC,MAAMmN,EAAa,CAAC9M,EAAK6M,GAMzB,OALAL,EAAYtG,KAAK4G,GACU,IAAvBN,EAAY7K,SACZ4K,EAAOH,EAAMK,IAAQ9M,GAEzBK,EAAIkD,GACG,KACH,MAAMgF,EAAQsE,EAAYZ,QAAQkB,IACnB,IAAX5E,GACAsE,EAAYX,OAAO3D,EAAO,GAEH,IAAvBsE,EAAY7K,SACZ4K,IACAA,EAAO,SAMvB,SAASQ,GAAQC,EAAQ/M,EAAIgN,GACzB,MAAMC,GAAU/B,MAAMgC,QAAQH,GACxBI,EAAeF,EACf,CAACF,GACDA,EACAK,EAAOpN,EAAG0B,OAAS,EACzB,OAAOwK,GAASc,GAAgBR,IAC5B,IAAIa,GAAS,EACb,MAAMC,EAAS,GACf,IAAIzE,EAAU,EACV0E,EAAU7N,EACd,MAAM8N,EAAO,KACT,GAAI3E,EACA,OAEJ0E,IACA,MAAME,EAASzN,EAAGiN,EAASK,EAAO,GAAKA,EAAQd,GAC3CY,EACAZ,EAAIiB,GAGJF,EAAUhN,EAAYkN,GAAUA,EAAS/N,GAG3CgO,EAAgBP,EAAatD,KAAI,CAAC8D,EAAOlM,ID9CvD,SAAmBkM,KAAU/I,GACzB,GAAa,MAAT+I,EACA,OAAOjO,EAEX,MAAMkO,EAAQD,EAAMvB,aAAaxH,GACjC,OAAOgJ,EAAMC,YAAc,IAAMD,EAAMC,cAAgBD,ECyCExB,CAAUuB,GAAQ1K,IACnEqK,EAAO7L,GAAKwB,EACZ4F,KAAa,GAAKpH,GACd4L,GACAG,OAEL,KACC3E,GAAY,GAAKpH,OAIrB,OAFA4L,GAAS,EACTG,IACO,WACHpN,EAAQsN,GACRH,0CC+GJxG,YAFGA,kOAEHA,qBAFGA,yUANEA,MAELA,YAHGA,6OACEA,aAELA,qBAHGA,sWAFNA,wTArKI+G,WACCC,EAAeC,OAAOC,SAASC,KAAKvC,QAAQ,UAC9CsC,EAAYF,GAAgB,EAAKC,OAAOC,SAASC,KAAKC,OAAOJ,EAAe,GAAK,UAG/EK,EAAaH,EAAStC,QAAQ,SAChC0C,EAAc,UACdD,GAAc,IACdC,EAAcJ,EAASE,OAAOC,EAAa,GAC3CH,EAAWA,EAASE,OAAO,EAAGC,KAG1BH,SAAAA,EAAUI,YAAAA,SAMTC,GAAMpC,GACf,eAEeM,GACXA,EAAIsB,YAEEzH,OACFmG,EAAIsB,cAERE,OAAOvL,iBAAiB,aAAc4D,GAAQ,cAG1C2H,OAAOtL,oBAAoB,aAAc2D,GAAQ,sBA2BvCJ,GAAKgI,OAClBA,GAAYA,EAASvM,OAAS,GAA4B,KAAtBuM,EAASM,OAAO,IAAwC,IAA3BN,EAAStC,QAAQ,YAC7EnH,MAAM,oCAIVuB,IAGNyI,QAAQC,cAAcC,QAASV,OAAOU,QAASC,QAASX,OAAOW,cAAUvG,OAAWA,GACpF4F,OAAOC,SAASW,MAA8B,KAAtBX,EAASM,OAAO,GAAY,GAAK,KAAON,gCAoIzDY,gBAKAC,EAAS,0BAMTC,GAAqB,WAK1BC,EAOFvD,YAAYwD,EAAM3K,OACTA,GAAkC,mBAAbA,IAAgD,iBAAbA,IAAwD,IAA/BA,EAAU4K,wBACtF1K,MAAM,gCAIXyK,GACe,iBAARA,IAAqBA,EAAKvN,OAAS,GAAwB,KAAlBuN,EAAKV,OAAO,IAA+B,KAAlBU,EAAKV,OAAO,KACtE,iBAARU,KAAsBA,aAAgBE,cAExC3K,MAAM,oFAGT4K,EAAOpD,KAAEA,GC/QT,SAAUqD,EAAKC,GAC7B,GAAID,aAAeF,OAAQ,MAAO,CAAEnD,MAAK,EAAOoD,QAAQC,GACxD,IAAIhI,EAAGO,EAAG2H,EAAKC,EAAKxD,EAAK,GAAIoD,EAAQ,GAAIK,EAAMJ,EAAIK,MAAM,KAGzD,IAFAD,EAAI,IAAMA,EAAIE,QAEPJ,EAAME,EAAIE,SAEN,OADVtI,EAAIkI,EAAI,KAEPvD,EAAK/F,KAAK,QACVmJ,GAAW,SACK,MAAN/H,GACVO,EAAI2H,EAAI5D,QAAQ,IAAK,GACrB6D,EAAMD,EAAI5D,QAAQ,IAAK,GACvBK,EAAK/F,KAAMsJ,EAAIK,UAAU,GAAMhI,EAAIA,GAAO4H,EAAMA,EAAMD,EAAI7N,SAC1D0N,IAAcxH,KAAO4H,EAAM,iBAAmB,aACvCA,IAAKJ,KAAexH,EAAI,IAAM,IAAM,KAAO2H,EAAIK,UAAUJ,KAEhEJ,GAAW,IAAMG,EAInB,MAAO,CACNvD,KAAMA,EACNoD,QAAS,IAAID,OAAO,IAAMC,GAAWE,EAAQ,UAAa,OAAS,MDwPrCO,CAAWZ,GAEnCnM,KAAKmM,KAAOA,EAGY,iBAAb3K,IAAwD,IAA/BA,EAAU4K,kBAC1CpM,KAAKwB,UAAYA,EAAUA,UAC3BxB,KAAKgN,WAAaxL,EAAUwL,eAC5BhN,KAAKiN,SAAWzL,EAAUyL,SAC1BjN,KAAKsH,MAAQ9F,EAAU8F,YAIvBtH,KAAKwB,cAAkBmB,QAAQC,QAAQpB,GACvCxB,KAAKgN,cACLhN,KAAKsH,UAGTtH,KAAKkN,SAAWZ,EAChBtM,KAAKmN,MAAQjE,EAWjBP,MAAMwD,MAGEH,KACqB,iBAAVA,OACHG,EAAKiB,WAAWpB,UAIT,KAHPG,EAAOA,EAAKd,OAAOW,EAAOpN,SAAW,YAMpCoN,aAAkBK,cACjBgB,EAAQlB,EAAKkB,MAAMrB,OACrBqB,IAASA,EAAM,UAIR,KAHPlB,EAAOA,EAAKd,OAAOgC,EAAM,GAAGzO,SAAW,UAS7C0O,EAAUtN,KAAKkN,SAASK,KAAKpB,MACnB,OAAZmB,SACO,SAIQ,IAAftN,KAAKmN,aACEG,QAGLE,SACF7O,EAAI,OACDA,EAAIqB,KAAKmN,MAAMvO,aAGd4O,EAAIxN,KAAKmN,MAAMxO,IAAM8O,mBAAmBH,EAAQ3O,EAAI,IAAM,KAAO,WAE9DqD,GACHwL,EAAIxN,KAAKmN,MAAMxO,IAAM,KAEzBA,WAEG6O,wBAoBW3L,WACTlD,EAAI,EAAGA,EAAIqB,KAAKgN,WAAWpO,OAAQD,cAC5BqB,KAAKgN,WAAWrO,GAAGkD,UACpB,SAIR,SAKT6L,KACF3B,aAAkBpE,IAElBoE,EAAOvO,UAASmQ,EAAOxB,KACnBuB,EAAWvK,SAAS+I,EAAUC,EAAMwB,OAKxCvQ,OAAO8L,KAAK6C,GAAQvO,SAAS2O,IACzBuB,EAAWvK,SAAS+I,EAAUC,EAAMJ,EAAOI,YAK/C3K,EAAY,KACZoM,EAAkB,KAClBtG,WAGEuG,EAAWlM,mBAGFmM,EAAiB/O,EAAM8C,SAE5BoB,IACN4K,EAAS9O,EAAM8C,OAIfkM,EAAsB,KFwP1B,IAAqB7Q,EEnPjB+O,IACAf,OAAOvL,iBAAiB,YAAaH,IAK7BuO,EADAvO,EAAMwO,OAASxO,EAAMwO,MAAMnC,QACLrM,EAAMwO,MAGN,QF0Ob9Q,OEpOT6Q,EACA7C,OAAO+C,SAASF,EAAoBnC,QAASmC,EAAoBlC,SAIjEX,OAAO+C,SAAS,EAAG,IFgO3BxM,IAAwBM,GAAGmC,aAAaf,KAAKjG,QE1N7CgR,EAAU,KAGVC,EAAe,YAKnB3C,GAAIlC,qBACA4E,EAAUE,MAGNzP,EAAI,OACDA,EAAI+O,EAAW9O,eACZyO,EAAQK,EAAW/O,GAAG0O,MAAMe,EAAOjD,cACpCkC,GACD1O,mBAIEkD,GACF8L,MAAOD,EAAW/O,GAAGwN,KACrBhB,SAAUiD,EAAOjD,SACjBI,YAAa6C,EAAO7C,YACpB0B,SAAUS,EAAW/O,GAAGsO,oBAIhBS,EAAW/O,GAAG0P,gBAAgBxM,cAEtCL,EAAY,MACZ2M,EAAe,UAEfL,EAAiB,mBAAoBjM,GAMzCiM,EAAiB,eAAgB1Q,OAAOP,UAAWgF,UAG7CmH,EAAM0E,EAAW/O,GAAG6C,aAEtB2M,GAAgBnF,GACZA,EAAIsF,aACJ9M,EAAYwH,EAAIsF,SAChBH,EAAenF,MACf4E,EAAkB5E,EAAIuF,mBACtBjH,MAIAwG,EAAiB,cAAe1Q,OAAOP,UAAWgF,GACnCL,UAAAA,EACXzC,KAAMyC,EAAUzC,cAIpByC,EAAY,MACZ2M,EAAe,YAIbK,QAAexF,OAGjBoF,GAAUF,aAMd1M,EAAagN,GAAUA,EAAOC,SAAYD,GAC1CL,EAAenF,SAKfqE,GAAyB,iBAATA,GAAqBjQ,OAAO8L,KAAKmE,GAAOzO,WACxDgP,EAAkBP,OAGlBO,EAAkB,UAItBtG,EAAQoG,EAAW/O,GAAG2I,YAItBwG,EAAiB,cAAe1Q,OAAOP,UAAWgF,GACnCL,UAAAA,EACXzC,KAAMyC,EAAUzC,YAMxByC,EAAY,MACZ2M,EAAe,wKAhIhBzC,QAAQgD,kBAAoBzC,EAAqB,SAAW,+DAlVvCjC,GACpBwB,IACCmD,GAASA,EAAKxD,WAMQnB,GACvBwB,IACCmD,GAASA,EAAKpD,88BE0GoCtH,KAAgB2K,kDAEf3K,KAAgB4K,0GACN5K,2DAHXA,KAAgB2K,eAAhB3K,KAAgB2K,0BAEf3K,KAAgB4K,gBAAhB5K,KAAgB4K,ovCAtBb5K,KAAQ6K,8FAQE7K,KAAKlF,+BACTkF,KAAK8K,+FAR7B9K,yDAS6BA,2DAVXA,KAAQ6K,aAAR7K,KAAQ6K,wBAQE7K,KAAKlF,UAALkF,KAAKlF,qBACTkF,KAAK8K,cAAL9K,KAAK8K,8HAhBhE9K,koBA/JF+K,GAAa,EACbC,GACAlQ,KAAM,GACNgQ,SAAU,IAEVG,KAQAC,GACAL,QAAU,wCAGNM,GAAa,KACA,KAAdH,EAAKlQ,MACJC,SAASqQ,eAAe,cAAcC,UAAY,0BAClDF,GAAY,GAIZpQ,SAASqQ,eAAe,cAAcC,UAAY,GAEhC,KAAlBL,EAAKF,UACL/P,SAASqQ,eAAe,kBAAkBC,UAAY,kBACtDF,GAAY,GAGZpQ,SAASqQ,eAAe,kBAAkBC,UAAY,IAGxC,IAAfF,SACOG,QAAiBC,MAAM,+BACrBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,oBAGhBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUlB,QAEtBM,EAASa,QACJlL,QAAcqK,EAASc,OAC3BC,eAAeC,QAAQ,kBAAmBrL,EAAMA,SAChD/B,GAAK,cAEc,MAApBoM,EAASiB,SACRxR,SAASqQ,eAAe,eAAeC,UAAY,qCAI/DF,GAAa,wBAITqB,GAAiB,UAGmB,IAA9BvB,EAAgBN,WACtB5P,SAASqQ,eAAe,mBAAmBC,UAAY,gBACvDmB,GAAgB,GAIhBzR,SAASqQ,eAAe,mBAAmBC,UAAY,QAElB,IAA/BJ,EAAgBL,WACtB7P,SAASqQ,eAAe,oBAAoBC,UAAY,iBACxDmB,GAAgB,QAI4B,IADjC,0JACJC,KAAKxB,EAAgBL,aACxB4B,GAAiB,EACjBzR,SAASqQ,eAAe,oBAAoBC,UAAY,gCAGxDtQ,SAASqQ,eAAe,oBAAoBC,UAAY,OAI1C,IAAnBmB,SACOlB,QAAiBC,MAAM,mCACrBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,oBAGhBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUjB,QAItBK,EAASa,QACJlL,QAAcqK,EAASc,OAC3BC,eAAeC,QAAQ,kBAAmBrL,EAAMA,SAChD/B,GAAK,kBAGjBsN,GAAiB,wBAIbE,GAAiB,KACE,KAApBxB,EAAQL,SAAoC,cAAnBK,EAAQL,SAChC9P,SAASqQ,eAAe,cAAcC,UAAY,sBAClDqB,GAAgB,GAGhB3R,SAASqQ,eAAe,cAAcC,UAAY,IAEhC,IAAnBqB,SACOpB,QAAiBC,MAAM,oCACrBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,oBAGhBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUhB,KAEtBI,EAASa,SACRpB,GAAa,OACbE,EAAgB0B,mBAAqBrB,EAASc,QAAQO,gBAEnC,MAApBrB,EAASiB,SACRxR,SAASqQ,eAAe,cAAcC,UAAY,uBAClDN,GAAa,IAGzB2B,GAAiB,cAqBsCxB,EAAQL,sCAQEG,EAAKlQ,mCACTkQ,EAAKF,iCAIQ5L,GAAK,6BAO5B+L,EAAgBN,wCAEfM,EAAgBL,uCAE3BG,GAAW,2sBC5Kd/K,mEAjBA,MAAnCqM,eAAeO,QAAQ,UAGnB1N,GAAK,uBAGRmN,eAAeQ,WAAW,SAC1B3N,GAAK,WAOoCA,GAAK,uBACLA,GAAK,yBACLA,GAAK,6MC0I3Bc,2BAALrF,2KAAKqF,cAALrF,uIAAAA,4DAE0EqF,KAAM8M,weAhDxFxB,QAAiBC,MAAM,mCACzBC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,mBAChBkB,cAAkBV,eAAeO,QAAQ,UAGzCd,SAAU,SACVC,eAAgB,mBAIjBT,EAASa,gBACKb,EAASc,OA2BNY,8gDAjB4ChN,KAASiN,sDAElBjN,KAAS6K,iJA0B5B7K,KAAM8M,sJACJ9M,0CAGAA,2CAhC0BA,KAASiN,mBAATjN,KAASiN,8BAElBjN,KAAS6K,aAAT7K,KAAS6K,2EA0B5B7K,KAAM8M,gBAAN9M,KAAM8M,iGAlKR,MAAnCT,eAAeO,QAAQ,UAGnB1N,GAAK,SAKRgO,GACAJ,gBAAazL,GAEb8L,GACAC,WAAY,kBAiDDC,EAAeC,OAGtBnC,GAAa,UACoB,IAA3BgC,EAASF,eAA2D,KAA3BE,EAASF,eACxDlS,SAASqQ,eAAe,kBAAkBC,UAAY,mBACtDF,GAAY,GAGZpQ,SAASqQ,eAAe,kBAAkBC,UAAY,QAE3B,IAArB8B,EAAStC,SAAgD,KAArBsC,EAAStC,UACnD9P,SAASqQ,eAAe,aAAaC,UAAY,oBACjDF,GAAY,IAGE,IAAfA,OAECgC,EAASG,SAAWA,WACdhC,QAAiBC,MAAM,wCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,mBAChBkB,cAAkBV,eAAeO,QAAQ,UAGzCd,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUiB,KAEF,MAApB7B,EAASiB,SACRxR,SAASqQ,eAAe,aAAaC,UAAY,qBAElDC,EAASa,KAERE,eAAeC,QAAQ,UAAWa,EAAStC,SAC3C3L,GAAK,mBAIbiM,GAAc,wBAvFdkB,eAAeQ,WAAW,SAC1B3N,GAAK,2BAIDqO,GAAc,UACa,IAArBL,EAAMJ,YACZ/R,SAASqQ,eAAe,qBAAqBC,UAAY,iBACzDkC,GAAa,GAGbxS,SAASqQ,eAAe,qBAAqBC,UAAY,IAE1C,IAAhBkC,SACOjC,QAAiBC,MAAM,qCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,mBAChBkB,cAAkBV,eAAeO,QAAQ,UAGzCd,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUgB,QAEtB5B,EAASa,QACJjR,QAAaoQ,EAASc,OACtBoB,EAAYzS,SAAS0S,uBAAuB,aAAa,GACzDC,EAAa3S,SAASC,cAAc,MACpC2S,EAAS5S,SAASC,cAAc,UACpC2S,EAAOzR,MAAQhB,EAAKoS,SACpBK,EAAOC,YAAc1S,EAAK4R,WAC1Ba,EAAOE,aAAiBR,EAAenS,EAAKoS,WAC5CI,EAAW1T,YAAY2T,GACvBH,EAAUxT,YAAY0T,IAI9BH,GAAc,gBA4EkDJ,EAASF,4CAElBE,EAAStC,+BAoBXwC,EAAeH,EAAMI,sBAMtCJ,EAAMJ,mCAGG5N,GAAK,uMCrHnCc,0BAALrF,0KAAKqF,aAALrF,uIAAAA,4DAC8JqF,KAAM8M,0bArCxKxB,QAAiBC,MAAM,mCACzBC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,mBAChBkB,cAAkBV,eAAeO,QAAQ,UAGzCd,SAAU,SACVC,eAAgB,mBAEjBT,EAASa,gBACKb,EAASc,OAmBVY,myBAYkBhN,gKA5DJ,MAAnCqM,eAAeO,QAAQ,UAGtB1N,GAAK,KASMmN,eAAeO,QAAQ,8BANlCP,eAAeQ,WAAW,SAC1B3N,GAAK,UA6CiCmN,eAAeC,QAAQ,WAAYY,EAAMI,UAAWjB,eAAeC,QAAQ,aAAcY,EAAMJ,YAAa5N,GAAK,uBAO1GA,GAAK,03DC6Bec,KAAKlF,6CAEdkF,KAAK8N,qDAEA9N,KAAK8K,+DAGL9K,sIACUA,4DARNA,KAAKlF,UAALkF,KAAKlF,qBAEdkF,KAAK8N,WAAL9N,KAAK8N,sBAEA9N,KAAK8K,cAAL9K,KAAK8K,yBAGL9K,UAAAA,+EA3FzD+N,EAHA/C,qCAMIG,GAAa,UACO,IAAdH,EAAKlQ,MAAwBkQ,EAAKlQ,KAAKH,OAAQ,GAAKqQ,EAAKlQ,KAAKH,OAAS,IAC7EwQ,GAAa,EACbpQ,SAASqQ,eAAe,kBAAkBC,UAAY,kDAItDtQ,SAASqQ,eAAe,kBAAkBC,UAAY,QAE9B,IAAlBL,EAAKF,UAA6C,KAAlBE,EAAKF,UAC3CK,GAAa,EACbpQ,SAASqQ,eAAe,kBAAkBC,UAAY,4BAGtDtQ,SAASqQ,eAAe,kBAAkBC,UAAY,QAE9B,IAAlBL,EAAKF,UAA4BE,EAAKF,SAASnQ,OAAS,GAC9DwQ,GAAa,EACbpQ,SAASqQ,eAAe,mBAAmBC,UAAY,iDAGvDtQ,SAASqQ,eAAe,mBAAmBC,UAAY,GAExDL,EAAKF,WAAaiD,GACjB5C,GAAa,EACbpQ,SAASqQ,eAAe,qBAAqBC,UAAY,kCAGzDtQ,SAASqQ,eAAe,qBAAqBC,UAAY,QAEpC,IAAfL,EAAK8C,OAAwC,KAAf9C,EAAK8C,MACzC3C,GAAa,EACbpQ,SAASqQ,eAAe,eAAeC,UAAY,uCAOvB,IAFjB,0JAEJoB,KAAKzB,EAAK8C,QACb3C,GAAa,EACbpQ,SAASqQ,eAAe,eAAeC,UAAY,iCAGnDtQ,SAASqQ,eAAe,eAAeC,UAAY,OAMzC,IAAdF,SACMG,QAAiBC,MAAM,kCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,oBAGhBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUlB,KAEtBM,EAASa,IACRjN,GAAK,KAEc,MAApBoM,EAASiB,SACRxR,SAASqQ,eAAe,qBAAqBC,UAAY,6CAGjEF,GAAa,cAUgDH,EAAKlQ,mCAEdkQ,EAAK8C,oCAEA9C,EAAKF,uCAGLiD,0BAEhB7O,GAAK,sRC9DzBmN,eAAeO,QAAQ,iaAEV5M,yFApClCmN,GACJtC,QAAUwB,eAAeO,QAAQ,YAEK,MAAnCP,eAAeO,QAAQ,UAGnB1N,GAAK,oCAGeqM,MAAM,uCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,mBAChBkB,cAAkBV,eAAeO,QAAQ,UAGzCd,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUiB,MAEbhB,KAERE,eAAeQ,WAAW,WAC1B3N,GAAK,qBAWiBA,GAAK,8qGCAkBc,KAASgO,8DAURhO,KAASiO,8DASTjO,KAASkO,8DAUTlO,KAASmO,8DAUTnO,KAASoO,oEAUTpO,KAASqO,iSAQDrO,kCAzDTA,KAASgO,kBAURhO,KAASiO,kBASTjO,KAASkO,kBAUTlO,KAASmO,kBAUTnO,KAASoO,mBAUTpO,KAASqO,oFArF3DC,GACFN,QAAU,EACVC,QAAU,EACVC,QAAU,EACVC,QAAU,EACVC,QAAU,EACVC,QAAU,oCAIe9C,MAAM,oCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACAC,eAAgB,mBAChBkB,cAAkBV,eAAeO,QAAQ,UAGzCd,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUoC,MAEbnC,IACRjN,GAAK,iBAWwCoP,EAASN,yCAURM,EAASL,yCASTK,EAASJ,yCAUTI,EAASH,yCAUTG,EAASF,yCAUTE,EAASD,uPCYiGrO,KAAWA,MAAUlF,UAe3JkF,KAAWA,MAAUuO,SAASC,QAAQ,QAQtCxO,KAAWA,MAAUyO,SAASD,QAAQ,QAQtCxO,KAAWA,MAAU0O,SAASF,QAAQ,u6BAlB7BxO,KAAWA,MAAUuO,yIAQrBvO,KAAWA,MAAUyO,yIAQrBzO,KAAWA,MAAU0O,qgBA7BwG1O,KAAWA,MAAUlF,6BAe3JkF,KAAWA,MAAUuO,SAASC,QAAQ,iCAF7BxO,KAAWA,MAAUuO,sBAU9BvO,KAAWA,MAAUyO,SAASD,QAAQ,iCAF7BxO,KAAWA,MAAUyO,sBAU9BzO,KAAWA,MAAU0O,SAASF,QAAQ,iCAF7BxO,KAAWA,MAAU0O,wIA/BjDvV,OAAO8L,KAAKjF,2BAAjBrF,uJAD0B0R,eAAeS,2gBA+CT9M,4CA9C3B7G,OAAO8L,KAAKjF,cAAjBrF,4HAAAA,oEAhGoC,MAAnC0R,eAAeO,QAAQ,UAGtB1N,GAAK,SAYLhE,EANAyT,GACArB,SAAUjB,eAAeO,QAAQ,aAGjCgC,WASEC,GACFC,EACA1J,EAAQ,EACRG,EAAO,EACPwJ,SAEIC,EAAU,QACRC,EAAWH,EAAMI,SAAQC,EAAKC,KAChCJ,GAAWzJ,EAAO,EAAIH,MACX+J,KAAQC,EAAIjR,MAAMiH,EAAOG,EAAO,iBAE7BlE,MAAd0N,GACAE,EAAS1V,UAAS8V,EAAG3U,KACbqU,EAAWrU,EAAIqU,EAAWpU,UAC1BsU,EAASvU,GAAK,EAAI2U,MAIvBJ,EAASC,SAAQC,EAAKC,IAAQD,EAAMC,GAAK,GAAKJ,2BAI/C1D,QAAiBC,MAAM,uCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACIC,eAAgB,oBAIpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUyC,KAErBrD,EAASa,KACTjR,SAAcoQ,EAASc,QAAQkD,SAC/BV,EAAazK,MAAMC,SACX/E,IAAInE,EAAK4H,KAAKyM,GAASA,EAAK5C,gBAClCuC,SACGC,EAAKK,SAAeL,GAAMK,IAAS1U,KAAM,GAAI2U,oBAGlDvU,EAAK3B,WAAWoT,YAAAA,EAAa+C,OAAAA,EAAQzC,cAAAA,MACjC2B,EAAWjC,GAAa8C,QAAQvQ,KAAKwQ,OACrCd,EAAWjC,GAAa7R,KAAOmS,QAKnC9T,OAAOwW,QAAQf,GAAYrV,YAAY2C,oBAC3BuT,GAAYvT,EAEpBA,EAAMqS,SAAWM,EAAaY,EAAS,EAAG,IAAI,GAAO,IACrDvT,EAAMuS,SAAWI,EAAaY,EAAS,EAAG,IAAI,GAAO,IACrDvT,EAAMwS,SAAWG,EAAaY,EAAS,EAAG,8BAxElDpD,eAAeQ,WAAW,SAC1B3N,GAAK,UAkIqBmN,eAAeC,QAAQ,cAAea,GAAWd,eAAeC,QAAQ,gBAAiBsC,EAAWzB,GAAUrS,MAAOoE,GAAK,0BAI/GA,GAAK,6OCpC8Gc,KAAaA,MAAalF,UAe5JkF,KAAaA,MAAauO,SAASC,QAAQ,QAQ3CxO,KAAaA,MAAayO,SAASD,QAAQ,QAQ3CxO,KAAaA,MAAa0O,SAASF,QAAQ,m6BAlBlCxO,KAAaA,MAAauO,0IAQ1BvO,KAAaA,MAAayO,0IAQ1BzO,KAAaA,MAAa0O,wgBA7B+F1O,KAAaA,MAAalF,6BAe5JkF,KAAaA,MAAauO,SAASC,QAAQ,iCAFlCxO,KAAaA,MAAauO,sBAUnCvO,KAAaA,MAAayO,SAASD,QAAQ,iCAFlCxO,KAAaA,MAAayO,sBAUnCzO,KAAaA,MAAa0O,SAASF,QAAQ,iCAFlCxO,KAAaA,MAAa0O,4IA/BtDvV,OAAO8L,KAAKjF,2BAAjBrF,0JAF0B0R,eAAeS,sDACbT,eAAeY,qjBA8CXjN,4CA7C3B7G,OAAO8L,KAAKjF,cAAjBrF,4HAAAA,oEAvGoC,MAAnC0R,eAAeO,QAAQ,UAGtB1N,GAAK,SAYLhE,EANJ0U,GACAjD,YAAcN,eAAeO,QAAQ,gBAGrCiD,WAUMhB,GACFC,EACA1J,EAAQ,EACRG,EAAO,EACPwJ,SAEIC,EAAU,QAERC,EAAWH,EAAMI,SAAQC,EAAKC,KAChCJ,GAAWzJ,EAAO,EAAIH,MACX+J,KAAQC,EAAIjR,MAAMiH,EAAOG,EAAO,iBAG7BlE,MAAd0N,GACAE,EAAS1V,UAAS8V,EAAG3U,KACbqU,EAAWrU,EAAIqU,EAAWpU,UAC1BsU,EAASvU,GAAK,EAAI2U,MAIvBJ,EAASC,SAAQC,EAAKC,IAAQD,EAAMC,GAAK,GAAKJ,2BAI/C1D,QAAiBC,MAAM,yCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACIC,eAAgB,oBAIpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU0D,KAGzBtE,EAASa,KACLjR,SAAcoQ,EAASc,QAAQkD,SAE/BO,EAAe1L,MAAMC,SACb/E,IAAInE,EAAK4H,KAAKyM,GAASA,EAAKO,YAClCZ,SACGC,EAAKK,SAAeL,GAAMK,IAAS1U,KAAM,GAAI2U,oBAGlDvU,EAAK3B,WAAWuW,QAAAA,EAASJ,OAAAA,EAAQ/E,UAAAA,MAE7BkF,EAAaC,GAASL,QAAQvQ,KAAKwQ,OACnCG,EAAaC,GAAShV,KAAO6P,QAKjCxR,OAAOwW,QAAQE,GAActW,YAAY2C,oBAC7BuT,GAAYvT,EAEpBA,EAAMqS,SAAWM,EAAaY,EAAS,EAAG,IAAI,GAAO,IACrDvT,EAAMuS,SAAWI,EAAaY,EAAS,EAAG,IAAI,GAAO,IACrDvT,EAAMwS,SAAWG,EAAaY,EAAS,EAAG,8BA9ElDpD,eAAeQ,WAAW,SAC1B3N,GAAK,UAwIqBmN,eAAeC,QAAQ,UAAWyD,GAAc1D,eAAeC,QAAQ,YAAauD,EAAaE,GAAajV,MAAOoE,GAAK,6BAI/GA,GAAK,mOC3CiHc,KAAWA,MAAUlF,UAe1JkF,KAAWA,MAAUuO,SAASC,QAAQ,QAQtCxO,KAAWA,MAAUyO,SAASD,QAAQ,QAQtCxO,KAAWA,MAAU0O,SAASF,QAAQ,g1BAlB7BxO,KAAWA,MAAUuO,yIAQrBvO,KAAWA,MAAUyO,yIAQrBzO,KAAWA,MAAU0O,odA7BuG1O,KAAWA,MAAUlF,6BAe1JkF,KAAWA,MAAUuO,SAASC,QAAQ,iCAF7BxO,KAAWA,MAAUuO,sBAU9BvO,KAAWA,MAAUyO,SAASD,QAAQ,iCAF7BxO,KAAWA,MAAUyO,sBAU9BzO,KAAWA,MAAU0O,SAASF,QAAQ,iCAF7BxO,KAAWA,MAAU0O,mHA/BjDvV,OAAO8L,KAAKjF,2BAAjBrF,yJAF0B0R,eAAeS,mDAChBT,eAAe1B,gjBA4CR3K,4CA3C3B7G,OAAO8L,KAAKjF,cAAjBrF,4HAAAA,oEAtGoC,MAAnC0R,eAAeO,QAAQ,UAGtB1N,GAAK,SAaLhE,EAPJ8U,GACAF,QAAUzD,eAAeO,QAAQ,WACjCU,SAAWjB,eAAeO,QAAQ,aAGlCgC,WAUMC,GACFC,EACA1J,EAAQ,EACRG,EAAO,EACPwJ,SAEIC,EAAU,QAERC,EAAWH,EAAMI,SAAQC,EAAKC,KAChCJ,GAAWzJ,EAAO,EAAIH,MACX+J,KAAQC,EAAIjR,MAAMiH,EAAOG,EAAO,iBAG7BlE,MAAd0N,GACAE,EAAS1V,UAAS8V,EAAG3U,KACbqU,EAAWrU,EAAIqU,EAAWpU,UAC1BsU,EAASvU,GAAK,EAAI2U,MAIvBJ,EAASC,SAAQC,EAAKC,IAAQD,EAAMC,GAAK,GAAKJ,2BAI/C1D,QAAiBC,MAAM,kDACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACIC,eAAgB,oBAIpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU8D,KAGzB1E,EAASa,KACLjR,SAAcoQ,EAASc,QAAQkD,SAC/BV,EAAazK,MAAMC,SACX/E,IAAInE,EAAK4H,KAAKyM,GAASA,EAAK5C,gBAClCuC,SACGC,EAAKK,SAAeL,GAAMK,IAAS1U,KAAM,GAAI2U,oBAGlDvU,EAAK3B,WAAWoT,YAAAA,EAAa+C,OAAAA,EAAQzC,cAAAA,MACjC2B,EAAWjC,GAAa8C,QAAQvQ,KAAKwQ,OACrCd,EAAWjC,GAAa7R,KAAOmS,QAKnC9T,OAAOwW,QAAQf,GAAYrV,YAAY2C,oBAC3BuT,GAAYvT,EAEpBA,EAAMqS,SAAWM,EAAaY,EAAS,EAAG,IAAI,GAAO,IACrDvT,EAAMuS,SAAWI,EAAaY,EAAS,EAAG,IAAI,GAAO,IACrDvT,EAAMwS,SAAWG,EAAaY,EAAS,EAAG,8BA7ElDpD,eAAeQ,WAAW,SAC1B3N,GAAK,WAyIgCA,GAAK,gUCwE3Bc,2BAALrF,0KAAKqF,cAALrF,uIAAAA,wDACkCqF,MAAM8M,wDAAvB9M,MAAMsN,iTAcjB2C,GAAejQ,gGADR,yLAFJA,KAAU2M,YAAc5Q,KAAKG,SAA7B8D,KAAU2M,YAAc5Q,KAAKG,0EAGhC+T,GAAejQ,+LAGZA,0BAALrF,0KAAKqF,aAALrF,uIAAAA,0DAGQqF,MAASiN,6DADAjN,MAAS2M,0EAClB3M,MAASiN,sCADAjN,MAAS2M,4SAWxBuD,GAAiBlQ,oGADV,qKADAA,KAAU8P,QAAU/T,KAAKG,SAAzB8D,KAAU8P,QAAU/T,KAAKG,yEAEhCgU,GAAiBlQ,8LAGdA,0BAALrF,0KAAKqF,aAALrF,uIAAAA,0DAEQqF,MAAY2K,yDADH3K,MAAY8P,sEACrB9P,MAAY2K,kCADH3K,MAAY8P,+WA5NrCxE,QAAiBC,MAAM,mCACzBC,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACIC,eAAgB,mBAChBkB,cAAeV,eAAeO,QAAQ,UAG1Cd,SAAU,SACVC,eAAgB,mBAGhBT,EAASa,gBACIb,EAASc,OAuKdY,YAQPhN,cAsBAA,w3BA/Bc,8DANHA,KAAUsN,ieAAVtN,KAAUsN,6RA+EAtN,wFA/EVA,KAAUsN,UAerBtN,4DAsBAA,kKAhMMiQ,GAAevT,SACpB4O,QAAiBC,MAAM,wCACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACIC,eAAgB,oBAGpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUxP,QAErB4O,EAASa,gBACIb,EAASc,sBAKf8D,GAAiBxT,SACtB4O,QAAiBC,MAAM,0CACzBC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACIC,eAAgB,oBAGpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUxP,QAGrB4O,EAASa,gBACIb,EAASc,0BArFQ,MAAnCC,eAAeO,QAAQ,UAGnB1N,GAAK,SAeRhE,EAPAiV,GAAY,EACZC,GAAe,EAQfC,GACA/C,SAAU,KACVX,YAAa,KACbmD,QAAS,MAoETQ,GACA/B,SAAU,EACVE,SAAU,EACVC,SAAU,SAERG,GACFC,EACA1J,EAAQ,EACRG,EAAO,EACPwJ,WAEME,EAAWH,EAAM3Q,MAAMiH,EAAOG,EAAO,UACzBlE,MAAd0N,GACAE,EAAS1V,UAAS8V,EAAG3U,KACbqU,EAAWrU,EAAIqU,EAAWpU,UAC1BsU,EAASvU,GAAK,EAAI2U,MAIvBJ,EAASC,SAAQC,EAAKC,IAAQD,EAAMC,GAAK,GAAKH,EAAStU,uBAGnD4V,EAAkB7T,SAEvB8T,EAASrX,OAAOwW,QAAQjT,GAAOwS,SAAQC,GAAMvS,EAAKV,KAEtC,OAAVA,GAA4B,SAAVA,MAA8BiT,GAAMvS,GAAMV,GACzDiT,OAGL7D,QAAiBC,MACnB,2CAEIC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SACIC,eAAgB,oBAGpBC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAUsE,QAGzBlF,EAASa,IACTjR,SAAcoQ,EAASc,QAAQkD,SAE3BN,EAAU,EAEVyB,GACAlC,SAAW,EACXE,SAAW,EACXC,SAAW,WAGNhU,KAAKQ,EACVoV,EAAiB/B,SAAW7T,EAAE6T,SAAWM,EACrCnU,EAAEgV,OACF,EACA,IACC,GAAO,IAEZY,EAAiB7B,SAAW/T,EAAE+T,SAAWI,EACrCnU,EAAEgV,OACF,EACA,IACC,GAAO,IAEZY,EAAiB5B,SAAWhU,EAAEgU,SAAWG,EACrCnU,EAAEgV,OACF,EACA,GAIJe,EAAalC,UAAY+B,EAAiB/B,SAC1CkC,EAAahC,UAAY6B,EAAiB7B,SAC1CgC,EAAa/B,UAAY4B,EAAiB5B,SAC1CM,GAAW,EAEfyB,EAAalC,UAAYS,EACzByB,EAAahC,UAAYO,EACzByB,EAAa/B,UAAaM,MAGlB0B,EAAY3V,SAASqQ,eAAe,UACpCsC,EAAa3S,SAASC,cAAc,cAE/BN,EAAI,EAAGA,EAAI,EAAGA,SACfiW,EAAc5V,SAASC,cAAc,MACrC4V,EAAOH,YAAuB/V,EAAE,KACpCiW,EAAYtU,aAAa,kBAAmBuU,KAC5CD,EAAY/C,YAAc6C,YAAuB/V,EAAE,KACnDgT,EAAW1T,YAAY2W,GAK3BD,EAAU1W,YAAY0T,4BAzL9BrB,eAAeQ,WAAW,SAC1B3N,GAAK,yBAqMWmR,EAAU/C,Sd0LlC,SAAsBrQ,GAClB,MAAM4T,EAAkB5T,EAAO6T,cAAc,aAAe7T,EAAOxB,QAAQ,GAC3E,OAAOoV,GAAmBA,EAAgB1T,gCc1L9BgT,GAAY,aAkBRC,GAAe,SAmCvBnJ,OAAOC,SAAS6J,eAKhBR,EAAkBF,SAkBWnR,GAAK,8WCjR9B8R,IAAKC,GACrBC,aAAcC,GACdC,gBAAiBC,GACjBC,kBAAmBC,GACnBC,gBAAiBC,GACjBC,iBAAkBC,GAClBC,gBAAkBC,GAClBC,gBAAkBC,GAClBC,mBAAqBC,GACrBC,sBAAwBC,GACxBC,mBAAqBC,YCtBT,mEAAQ,CACnBvY,OAAQiB,SAASiR,KACjB3I,MAAO,CACNvI,KAAM"}